var documenterSearchIndex = {"docs":
[{"location":"examples/powder_averaging/","page":"Powder Averaging","title":"Powder Averaging","text":"EditURL = \"https://github.com/SunnySuite/Sunny.jl/blob/main/examples/powder_averaging.jl\"","category":"page"},{"location":"examples/powder_averaging/#Powder-Averaging","page":"Powder Averaging","title":"Powder Averaging","text":"","category":"section"},{"location":"examples/powder_averaging/","page":"Powder Averaging","title":"Powder Averaging","text":"This tutorial gives a brief demonstration of how to calculate polycrystalline data using Sunny's structure factor tools.","category":"page"},{"location":"examples/powder_averaging/","page":"Powder Averaging","title":"Powder Averaging","text":"We begin by constructing a simple anti-ferromagnetic model on a diamond lattice.","category":"page"},{"location":"examples/powder_averaging/","page":"Powder Averaging","title":"Powder Averaging","text":"using Sunny, GLMakie\nusing Statistics: mean\n\ndims = (8,8,8)               # Lattice dimensions\nseed = 1                     # RNG seed for repeatable behavior\nJ = Sunny.meV_per_K*7.5413   # Nearest-neighbor exchange parameter\n\ncrystal = Sunny.diamond_crystal()\nsys = System(crystal, dims, [SpinInfo(1, S=3/2)], :dipole; seed)\nset_exchange!(sys, J, Bond(1, 3, [0,0,0]))","category":"page"},{"location":"examples/powder_averaging/","page":"Powder Averaging","title":"Powder Averaging","text":"We next set up a Langevin integrator and thermalize the system.","category":"page"},{"location":"examples/powder_averaging/","page":"Powder Averaging","title":"Powder Averaging","text":"Œît = 0.07                   # Step size for Langevin integrator\nkT = Sunny.meV_per_K * 2    # Temperature of simulation (2K)\nŒª = 0.1                     # Damping parameter\nintegrator = Langevin(Œît; kT, Œª);\n\nfor _ ‚àà 1:3000\n    step!(sys, integrator)\nend;","category":"page"},{"location":"examples/powder_averaging/","page":"Powder Averaging","title":"Powder Averaging","text":"We can now calculate ùíÆ(ùê™œâ) with DynamicStructureFactor. We will tell Sunny to symmetrize the sample trajectory along the time-axis to minimize Fourier artifacts.","category":"page"},{"location":"examples/powder_averaging/","page":"Powder Averaging","title":"Powder Averaging","text":"sf = DynamicStructureFactor(sys;\n    Œît=2Œît,\n    nœâ=100,\n    œâmax=5.5,\n    process_trajectory=:symmetrize\n);","category":"page"},{"location":"examples/powder_averaging/","page":"Powder Averaging","title":"Powder Averaging","text":"To get some intuition about the expected results, we first look at the \"single crystal\" results along a high-symmetry path in the first Brillouin zone. While doing so, we will add some artificial broadening along the energy axis with broaden_energy. To use this function, it is necessary to define a kernel function with the form, kernel(œâ, œâ‚ÇÄ), where œâ is energy and œâ‚ÇÄ is the center frequency of the kernel. In this example we apply some Lorentzian broadening using an anonymous function: (œâ, œâ‚ÇÄ) -> lorentzian(œâ-œâ‚ÇÄ, 0.1).","category":"page"},{"location":"examples/powder_averaging/","page":"Powder Averaging","title":"Powder Averaging","text":"qpoints = [[0.0, 0.0, 0.0], [0.5, 0.0, 0.0], [0.5, 0.5, 0.0], [0.0, 0.0, 0.0]]\nqs, markers = connected_path(qpoints, 50)\n\nis = intensities(sf, qs, :trace; interpolation=:none)\nis_broad = broaden_energy(sf, is, (œâ, œâ‚ÇÄ) -> lorentzian(œâ-œâ‚ÇÄ, 0.1))\n\n# Plot results\nfig = Figure(; resolution=(1000,400))\nxticklabels = [string(tuple(qs[i]...)) for i in markers]\nplotparams = (;\n    aspect=1.4,\n    ylabel = \"œâ (meV)\",\n    xlabel = \"ùê™ (RLU)\",\n    xticks=(markers, xticklabels),\n    xticklabelrotation=œÄ/10,\n    xticklabelsize=14,\n)\nax1 = Axis(fig[1,1]; title=\"No artificial broadening\", plotparams...)\nheatmap!(ax1, 1:size(is, 1), œâs(sf), is; colorrange=(0,0.5))\nax2 = Axis(fig[1,2]; title=\"Lorentzian broadening (Œ∑=0.1)\", plotparams...)\nheatmap!(ax2, 1:size(is, 1), œâs(sf), is_broad; colorrange=(0,2.0))\nfig","category":"page"},{"location":"examples/powder_averaging/","page":"Powder Averaging","title":"Powder Averaging","text":"Figure()","category":"page"},{"location":"examples/powder_averaging/","page":"Powder Averaging","title":"Powder Averaging","text":"We next write a simple powder averaging function that takes a structure factor, a list of radius values (√Ö‚Åª¬π), and a density parameter (√Ö‚Åª¬≤) that will control the number of wave vectors to sample at each radius. For each radius r, the function will generate wavevectors on a sphere of this radius and retrieve their intensities. These intensities will be broadened, as just demonstrated above, and then averaged to produce a single vector of energy-intensities for each r. Note that our powder_average function passes most of its keywords through to intensities, so it can be given kT, formfactors, etc., and these parameters will be applied to the calculation.","category":"page"},{"location":"examples/powder_averaging/","page":"Powder Averaging","title":"Powder Averaging","text":"function powder_average(sf, rs, density; Œ∑=0.1, mode=:perp, kwargs...)\n    nœâ = length(œâs(sf))\n    output = zeros(Float64, length(rs), nœâ)\n\n    for (i, r) in enumerate(rs)\n        qs = spherical_shell(sf, r, density)  # Get points on a sphere of radius r\n        if length(qs) == 0\n            qs = [[0., 0., 0.]]  # If no points (r is too small), just look at 0 vector\n        end\n        vals = intensities(sf, qs, mode; kwargs...)  # Retrieve energy intensities\n        vals[:,1] .*= 0.0  # Remove elastic peaks before broadening\n        vals = broaden_energy(sf, vals, (œâ,œâ‚ÇÄ)->lorentzian(œâ-œâ‚ÇÄ, Œ∑))  # Apply Lorentzian broadening\n        output[i,:] = reshape(mean(vals, dims=1), (nœâ,))  # Average single radius results and save\n    end\n\n    return output\nend;","category":"page"},{"location":"examples/powder_averaging/","page":"Powder Averaging","title":"Powder Averaging","text":"Finally, we perform the calculation,","category":"page"},{"location":"examples/powder_averaging/","page":"Powder Averaging","title":"Powder Averaging","text":"rs = range(0, 6œÄ, length=55)  # Set of radius values\nŒ∑ = 0.05                      # Lorentzian broadening parameter\ndensity = 0.15                # Number of samples in √Ö‚Åª¬≤\n\npa = powder_average(sf, rs, density; Œ∑, kT);","category":"page"},{"location":"examples/powder_averaging/","page":"Powder Averaging","title":"Powder Averaging","text":"and plot the results.","category":"page"},{"location":"examples/powder_averaging/","page":"Powder Averaging","title":"Powder Averaging","text":"fig = Figure()\nax = Axis(fig[1,1]; xlabel = \"|Q| (√Ö‚Åª¬π)\", ylabel = \"œâ (meV)\")\nheatmap!(ax, rs, œâs(sf), pa; colorrange=(0, 25.0))\nfig","category":"page"},{"location":"examples/powder_averaging/","page":"Powder Averaging","title":"Powder Averaging","text":"Figure()","category":"page"},{"location":"examples/powder_averaging/","page":"Powder Averaging","title":"Powder Averaging","text":"Note that the bandwidth is similar to what we saw above along the high symmetry path.","category":"page"},{"location":"examples/powder_averaging/","page":"Powder Averaging","title":"Powder Averaging","text":"This was a very quick calculation. The structure factor calculation itself and the powder averaging will each execute in < 10 s on a typical laptop. Higher quality results can be obtained by:","category":"page"},{"location":"examples/powder_averaging/","page":"Powder Averaging","title":"Powder Averaging","text":"Increasing the number of samples used to calculate ùíÆ(ùê™œâ) using add_sample!\nIncreasing the system size to improve momentum space resolution\nIncreasing the energy resolution (nœâ keyword of DynamicStructureFactor)\nApplying instrument-specific energy broadening by giving broaden_energy a custom kernel function.\nIncluding FormFactor corrections\nSetting interpolation=:linear when retrieving intensities in the powder averaging loop.","category":"page"},{"location":"examples/powder_averaging/","page":"Powder Averaging","title":"Powder Averaging","text":"","category":"page"},{"location":"examples/powder_averaging/","page":"Powder Averaging","title":"Powder Averaging","text":"This page was generated using Literate.jl.","category":"page"},{"location":"versions/#Version-0.4.3","page":"Version History","title":"Version 0.4.3","text":"","category":"section"},{"location":"versions/","page":"Version History","title":"Version History","text":"Implement renormalization of single-ion anisotropy when in :dipole mode. This makes the model more faithful to the quantum mechanical Hamiltonian.","category":"page"},{"location":"versions/","page":"Version History","title":"Version History","text":"The functions set_exchange_at! and set_biquadratic_at! now expect two Sites, rather than a Site and a Bond.","category":"page"},{"location":"versions/#Version-0.4.2","page":"Version History","title":"Version 0.4.2","text":"","category":"section"},{"location":"versions/","page":"Version History","title":"Version History","text":"Introduce LocalSampler, a framework for MCMC sampling with local spin updates.","category":"page"},{"location":"versions/","page":"Version History","title":"Version History","text":"Rename print_dominant_wavevectors to print_wrapped_intensities to reduce confusion with the physical instantaneous intensities.","category":"page"},{"location":"versions/","page":"Version History","title":"Version History","text":"The function spherical_shell now takes a radius in physical units of inverse √Ö.","category":"page"},{"location":"versions/","page":"Version History","title":"Version History","text":"New exported functions global_position, magnetic_moment, all_sites.","category":"page"},{"location":"versions/","page":"Version History","title":"Version History","text":"Remove all uses of Base.deepcopy which resolves crashes.","category":"page"},{"location":"versions/#Version-0.4.1","page":"Version History","title":"Version 0.4.1","text":"","category":"section"},{"location":"versions/","page":"Version History","title":"Version History","text":"The function to_inhomogeneous creates a system that supports inhomogeneous interactions, which can be set using set_exchange_at!, etc.","category":"page"},{"location":"versions/","page":"Version History","title":"Version History","text":"set_biquadratic! replaces set_exchange_with_biquadratic!.","category":"page"},{"location":"versions/#Version-0.4.0","page":"Version History","title":"Version 0.4.0","text":"","category":"section"},{"location":"versions/","page":"Version History","title":"Version History","text":"This update includes many breaking changes, and is missing some features of 0.3.0.","category":"page"},{"location":"versions/#Creating-a-spin-System","page":"Version History","title":"Creating a spin System","text":"","category":"section"},{"location":"versions/","page":"Version History","title":"Version History","text":"SpinSystem has been renamed System. Its constructor now has the form,","category":"page"},{"location":"versions/","page":"Version History","title":"Version History","text":"System(crystal, latsize, infos, mode)","category":"page"},{"location":"versions/","page":"Version History","title":"Version History","text":"The parameter infos is now a list of SpinInfo objects. Each defines spin angular momentum S = frac12 1 frac32 , and an optional g-factor or tensor.","category":"page"},{"location":"versions/","page":"Version History","title":"Version History","text":"The parameter mode is one of :SUN or :dipole.","category":"page"},{"location":"versions/#Setting-interactions","page":"Version History","title":"Setting interactions","text":"","category":"section"},{"location":"versions/","page":"Version History","title":"Version History","text":"Interactions are now added mutably to an existing System using the following functions: set_external_field!, set_exchange!, set_anisotropy!, enable_dipole_dipole!.","category":"page"},{"location":"versions/","page":"Version History","title":"Version History","text":"As a convenience, one can use dmvec(D) to convert a DM vector to a 33 antisymmetric exchange matrix.","category":"page"},{"location":"versions/","page":"Version History","title":"Version History","text":"Fully general single-ion anisotropy is now possible. The function set_anisotropy! expects the single ion anisotropy to be expressed as a polynomial in symbolic spin operators ùíÆ, or as a linear combination of symbolic Stevens operators ùí™. For example, an easy axis anisotropy in the direction n may be written D*(ùíÆ‚ãÖn)^2.","category":"page"},{"location":"versions/","page":"Version History","title":"Version History","text":"Stevens operators ùí™[k,q] admit polynomial expression in spin operators ùíÆ[Œ±]. Conversely, a polynomial of spin operators can be expressed as a linear combination of Stevens operators. To see this expansion use print_anisotropy_as_stevens.","category":"page"},{"location":"versions/#Inhomogeneous-field","page":"Version History","title":"Inhomogeneous field","text":"","category":"section"},{"location":"versions/","page":"Version History","title":"Version History","text":"An external field can be applied to a single site with set_external_field_at!. ","category":"page"},{"location":"versions/#Structure-factor-rewrite","page":"Version History","title":"Structure factor rewrite","text":"","category":"section"},{"location":"versions/","page":"Version History","title":"Version History","text":"The calculation of structure factors has been completely rewritten. For the new interface, see the Structure Factor Calculations page.","category":"page"},{"location":"versions/#Various","page":"Version History","title":"Various","text":"","category":"section"},{"location":"versions/","page":"Version History","title":"Version History","text":"The \"Sampler\" interface is in flux. Langevin replaces both LangevinHeunP and LangevinSampler. Local spin-flip Monte Carlo sampling methods are temporarily broken.\nrepeat_periodically replaces extend_periodically.","category":"page"},{"location":"versions/","page":"Version History","title":"Version History","text":"Additional related functions include resize_periodically and reshape_geometry, the latter being fundamental.","category":"page"},{"location":"versions/","page":"Version History","title":"Version History","text":"print_symmetry_table replaces print_bond_table().","category":"page"},{"location":"versions/","page":"Version History","title":"Version History","text":"The new function includes the list of symmetry-allowed single ion anisotropies in addition to exchange interactions.","category":"page"},{"location":"versions/","page":"Version History","title":"Version History","text":"When reading CIF files, the field _atom_site_label is now used in place of the field _atom_site_type_symbol.","category":"page"},{"location":"versions/","page":"Version History","title":"Version History","text":"This is required for correctness. The field _atom_site_label is guaranteed to be present, and is guaranteed to be a distinct label for each symmetry-inequivalent site. Code that explicitly referred to site labels (e.g. in calls to subcrystal) will need to be updated to use the new label.","category":"page"},{"location":"library/#Library-API","page":"Library API","title":"Library API","text":"","category":"section"},{"location":"library/","page":"Library API","title":"Library API","text":"This page describes the public types and functions exported by Sunny. This documentation can be also be accessed using the Julia help system (enter ? at the Julia command prompt).","category":"page"},{"location":"library/","page":"Library API","title":"Library API","text":"","category":"page"},{"location":"library/","page":"Library API","title":"Library API","text":"Modules = [Sunny]\nPrivate = false","category":"page"},{"location":"library/#Sunny.Units","page":"Library API","title":"Sunny.Units","text":"Units.meV\nUnits.theory\n\nThe unit system is implicitly determined by the definition of two physical constants: the vacuum permeability Œº‚ÇÄ and the Bohr magneton Œº_B. Temperatures are effectively measured in units of energy (k_B = 1) and time is effectively measured in units of inverse energy (ƒß = 1). The default unit system, Units.meV, employs (meV, ‚Ñ´, tesla). Select alternatively Units.theory for a units system defined so that Œº‚ÇÄ = Œº_B = 1.\n\nSee also meV_per_K\n\n\n\n\n\n","category":"constant"},{"location":"library/#Sunny.meV_per_K","page":"Library API","title":"Sunny.meV_per_K","text":"meV_per_K = 0.086173332621451774\n\nA physical constant. Useful for converting kelvin into the default energy units, meV.\n\n\n\n\n\n","category":"constant"},{"location":"library/#Sunny.ùí™","page":"Library API","title":"Sunny.ùí™","text":"ùí™[k,q]\n\nAbstract symbols for the Stevens operators. Linear combinations of these can be used to define a single-ion anisotropy.\n\n\n\n\n\n","category":"constant"},{"location":"library/#Sunny.ùíÆ","page":"Library API","title":"Sunny.ùíÆ","text":"ùíÆ[1], ùíÆ[2], ùíÆ[3]\n\nAbstract symbols for the spin operators. Polynomials of these can be used to define a single-ion anisotropy.\n\n\n\n\n\n","category":"constant"},{"location":"library/#Sunny.Bond","page":"Library API","title":"Sunny.Bond","text":"Bond(i, j, n)\n\nRepresents a bond between atom indices i and j. n is a vector of three integers specifying unit cell displacement in terms of lattice vectors.\n\n\n\n\n\n","category":"type"},{"location":"library/#Sunny.Crystal","page":"Library API","title":"Sunny.Crystal","text":"An object describing a crystallographic unit cell and its space group symmetry. Constructors are as follows:\n\nCrystal(filename; symprec=1e-5)\n\nReads the crystal from a .cif file located at the path filename.  The optional parameter symprec controls the precision tolerance for spacegroup symmetries.\n\nCrystal(latvecs, positions; types=nothing, symprec=1e-5)\n\nConstructs a crystal from the complete list of atom positions positions, with coordinates (between 0 and 1) in units of lattice vectors latvecs. Spacegroup symmetry information is automatically inferred. The optional parameter types is a list of strings, one for each atom, and can be used to break symmetry-equivalence between atoms.\n\nCrystal(latvecs, positions, spacegroup_number; types=nothing, setting=nothing, symprec=1e-5)\n\nBuilds a crystal by applying symmetry operators for a given international spacegroup number. For certain spacegroups, there are multiple possible unit cell settings; in this case, a warning message will be printed, and a list of crystals will be returned, one for every possible setting. Alternatively, the optional setting string will disambiguate between unit cell conventions.\n\nCurrently, crystals built using only the spacegroup number will be missing some symmetry information. It is generally preferred to build a crystal from a .cif file or from the full specification of the unit cell.\n\nExamples\n\n# Read a Crystal from a .cif file\nCrystal(\"filename.cif\")\n\n# Build an FCC crystal using the primitive unit cell. The spacegroup number\n# 225 is inferred.\nlatvecs = [1 1 0;\n            1 0 1;\n            0 1 1] / 2\npositions = [[0, 0, 0]]\nCrystal(latvecs, positions)\n\n# Build a CsCl crystal (two cubic sublattices). By providing distinct type\n# strings, the spacegroup number 221 is inferred.\nlatvecs = lattice_vectors(1, 1, 1, 90, 90, 90)\npositions = [[0,0,0], [0.5,0.5,0.5]]\ntypes = [\"Na\", \"Cl\"]\ncryst = Crystal(latvecs, positions; types)\n\n# Build a diamond cubic crystal from its spacegroup number 227. This\n# spacegroup has two possible settings (\"1\" or \"2\"), which determine an\n# overall unit cell translation.\nlatvecs = lattice_vectors(1, 1, 1, 90, 90, 90)\npositions = [[1, 1, 1] / 4]\ncryst = Crystal(latvecs, positions, 227; setting=\"1\")\n\nSee also lattice_vectors.\n\n\n\n\n\n","category":"type"},{"location":"library/#Sunny.FormFactor-Tuple{Int64, Union{Nothing, String}}","page":"Library API","title":"Sunny.FormFactor","text":"FormFactor(atom::Int64, elem::String; g_lande=nothing)\n\nBasic type for specifying form factor parameters. Must be provided a site within the unit cell (atom) and a string specifying the element name. This used when calling intensities, which requires a list of FormFactorss.\n\nA list of supported element names is available at:\n\nhttps://www.ill.eu/sites/ccsl/ffacts/ffachtml.html\n\nThe Land√© g-factor may also be specified. \n\nIn more detail, the data stored in a FormFactor will be used to compute the form factor for each momentum space magnitude |k|, measured in inverse angstroms. The result is dependent on the magnetic ion species. By default, a first order form factor f is returned. If the keyword g_lande is given a numerical value, then a second order form factor F is returned.\n\nIt is traditional to define the form factors using a sum of Gaussian broadening functions in the scalar variable s = k4œÄ, where k can be interpreted as the magnitude of momentum transfer.\n\nThe Neutron Data Booklet, 2nd ed., Sec. 2.5 Magnetic Form Factors, defines the approximation\n\nlangle j_l(s) rangle = A e^-as^2 + B e^-bs^2 + Ce^-cs^2 + D\n\nwhere coefficients A B C D a b c are obtained from semi-empirical fits, depending on the orbital angular momentum index l = 0 2. For transition metals, the form-factors are calculated using the Hartree-Fock method. For rare-earth metals and ions, Dirac-Fock form is used for the calculations.\n\nA first approximation to the magnetic form factor is\n\nf(s) = langle j_0(s) rangle\n\nA second order correction is given by\n\nF(s) = frac2-gg langle j_2(s) rangle s^2 + f(s), where g is the Land√© g-factor.  \n\nDigital tables are available at:\n\nhttps://www.ill.eu/sites/ccsl/ffacts/ffachtml.html\n\nAdditional references are:\n\nMarshall W and Lovesey S W, Theory of thermal neutron scattering Chapter 6 Oxford University Press (1971)\nClementi E and Roetti C,  Atomic Data and Nuclear Data Tables, 14 pp 177-478 (1974)\nFreeman A J and Descleaux J P, J. Magn. Mag. Mater., 12 pp 11-21 (1979)\nDescleaux J P and Freeman A J, J. Magn. Mag. Mater., 8 pp 119-129 (1978) \n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.ImplicitMidpoint","page":"Library API","title":"Sunny.ImplicitMidpoint","text":"ImplicitMidpoint(Œît::Float64; atol=1e-12) where N\n\nEnergy-conserving integrator for simulating dynamics without damping or noise. Use with the step! function to evolve a System forward by a time step of Œît:\n\nstep!(sys::System, integrator::ImplicitMidpoint)\n\nThe above function will use the spherical midpoint integration scheme for dipole systems and the Schrodinger midpoint integration scheme for SU(N) spin systems. Both integration schemes are symplectic (energy-conserving) and are appropriate for simulating dissipationless dynamics over long periods of time.\n\n\n\n\n\n","category":"type"},{"location":"library/#Sunny.Langevin","page":"Library API","title":"Sunny.Langevin","text":"Langevin(Œît::Float64; Œª::Float64, kT::Float64)\n\nProjected Heun integration scheme with noise and damping. Use with the step! function to evolve a System forward by a time step of Œît:\n\nstep!(sys::System, integrator::Langevin)\n\nIf kT > 0, this will simulate dynamics in the presence of a thermal bath. Œª is an empirical parameter that determines the strength of coupling to the thermal bath and sets a time scale for decorrelation, 1/Œª. Both keyword parameters are required.\n\n\n\n\n\n","category":"type"},{"location":"library/#Sunny.LocalSampler","page":"Library API","title":"Sunny.LocalSampler","text":"LocalSampler(; kT, nsweeps=1.0, propose=propose_uniform)\n\nMonte Carlo simulation involving Metropolis updates to individual spins. Use with the step! function.\n\nkT is the target temperature, and can be updated mutably.\nnsweeps is the number of full-system MCMC sweeps, and may be fractional. The default value of 1.0 means that step! performs, on average, one trial update for every spin.\npropose is a function to generate new candidate spin states, which may be accepted or rejected. Options include propose_uniform, propose_flip, and propose_delta. Multiple proposals can be mixed with the macro @mix_proposals.\n\nThe returned object stores fields ŒîE and Œîs, which represent the cumulative change to the net energy and dipole, respectively.\n\n\n\n\n\n","category":"type"},{"location":"library/#Sunny.Site","page":"Library API","title":"Sunny.Site","text":"(cell1, cell2, cell3, i) :: Site\n\nFour indices identifying a single site in a System. The first three indices select the lattice cell and the last selects the sublattice (i.e., the atom within the unit cell).\n\nThis object can be used to index dipoles and coherents fields of a System. A Site is also required to specify inhomogeneous interactions via functions such as set_external_field_at! or set_exchange_at!.\n\nNote that the definition of a cell may change when a system is reshaped. In this case, it is convenient to construct the Site using position_to_site, which always takes a position in fractional coordinates of the original lattice vectors.\n\n\n\n\n\n","category":"type"},{"location":"library/#Sunny.SpinInfo","page":"Library API","title":"Sunny.SpinInfo","text":"SpinInfo(atom::Int; S, g=2)\n\nCharacterizes the spin at a given atom index within the crystal unit cell. S is an integer multiple of 1/2 and gives the spin angular momentum in units of ƒß. g is the g-factor or tensor, such that an angular momentum dipole s produces a magnetic moment g s in units of the Bohr magneton.\n\n\n\n\n\n","category":"type"},{"location":"library/#Sunny.SpinWave","page":"Library API","title":"Sunny.SpinWave","text":"External constructor for SpinWave\n\n\n\n\n\n","category":"type"},{"location":"library/#Sunny.SpinWave-2","page":"Library API","title":"Sunny.SpinWave","text":"Additional fields for linear spin-wave calculations.\n\n\n\n\n\n","category":"type"},{"location":"library/#Sunny.StructureFactor-Union{Tuple{System{N}}, Tuple{N}} where N","page":"Library API","title":"Sunny.StructureFactor","text":"StructureFactor\n\nAn object holding ùíÆ(ùê™œâ) or ùíÆ(ùê™) data. Construct a StructureFactor using DynamicStructureFactor or InstantStructureFactor, respectively.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.System-Tuple{Crystal, Tuple{Int64, Int64, Int64}, Vector{SpinInfo}, Symbol}","page":"Library API","title":"Sunny.System","text":"System(crystal::Crystal, latsize, infos, mode; units=Units.meV, seed::Int)\n\nConstruct a System of spins for a given Crystal symmetry. The latsize parameter determines the number of unit cells in each lattice vector direction. The infos parameter is a list of SpinInfo objects, which determine the magnitude S and g-tensor of each spin.\n\nThe three possible options for mode are :SUN, :dipole, and :large_S. The most variationally accurate choice is :SUN, in which each spin-S degree of freedom is described as an SU(N) coherent state, where N = 2S + 1. Note that an SU(N) coherent state fully describes any local spin state; this description includes expected dipole components S·µÖ, quadrupole components S·µÖS·µù+S·µùS·µÖ, etc.\n\nThe mode :dipole projects the SU(N) dynamics onto the space of pure dipoles. In practice this means that Sunny will simulate Landau-Lifshitz dynamics, but all single-ion anisotropy and biquadratic exchange interactions will be automatically renormalized for maximum accuracy.\n\nTo disable such renormalization, e.g. to reproduce results using the historical large-S classical limit, use the experimental mode :large_S. Modes :SUN or :dipole are strongly preferred for the development of new models.\n\nThe default units system of (meV, ‚Ñ´, tesla) can be overridden by with the units parameter; see Units. \n\nAn optional seed may be provided to achieve reproducible random number generation.\n\nAll spins are initially polarized in the z-direction.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.DynamicStructureFactor-Tuple{System}","page":"Library API","title":"Sunny.DynamicStructureFactor","text":"DynamicStructureFactor(sys::System; Œît, nœâ, œâmax, \n    process_trajectory=:none, observables=nothing, correlations=nothing)\n\nCreates a StructureFactor for calculating and storing ùíÆ(ùê™œâ) data. This information will be obtained by running dynamical spin simulations on equilibrium snapshots, and measuring pair-correlations. The ùíÆ(ùê™œâ) data can be retrieved by calling intensities. Alternatively, instant_intensities will integrate out œâ to obtain ùíÆ(ùê™), optionally applying classical-to-quantum correction factors.\n\nPrior to calling DynamicStructureFactor, ensure that sys represents a good equilibrium sample. Additional sample data may be accumulated by calling add_sample!(sf, sys) with newly equilibrated sys configurations.\n\nThree keywords are required to specify the dynamics used for the trajectory calculation.\n\nŒît: The time step used for calculating the trajectory from which dynamic   spin-spin correlations are calculated. The trajectories are calculated with   an ImplicitMidpoint integrator.\nœâmax: The maximum energy, œâ, that will be resolved.\nnœâ: The number of energy bins to calculated between 0 and œâmax.\n\nAdditional keyword options are the following:\n\nprocess_trajectory: Specifies a function that will be applied to the sample   trajectory before correlation analysis. Current options are :none and   :symmetrize. The latter will symmetrize the trajectory in time, which can   be useful for removing Fourier artifacts that arise when calculating the   correlations.\nobservables: Enables an advanced feature for SU(N) mode, allowing the user   to specify custom observables other than the three components of the dipole.   To use this features, observables must be given an N√óN√ónumops array,   where the final index is used to retrieve each N√óN operator.\ncorrelations: Specify which correlation functions are calculated, i.e. which   matrix elements Œ±Œ≤ of ùíÆ^Œ±Œ≤(qœâ) are calculated and stored.   Specified with a vector of tuples. By default Sunny records all auto- and   cross-correlations generated by the x, y, and z dipolar components (1, 2,   and 3 respectively). To retain only the xx and xy correlations, one would   set correlations=[(1,1), (1,2)]. If custom observables (observables) are   given, the indices are ordered in the same manner as the final index of   ops.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.InstantStructureFactor-Tuple{System}","page":"Library API","title":"Sunny.InstantStructureFactor","text":"InstantStructureFactor(sys::System; process_trajectory=:none,\n                        observables=nothing, correlations=nothing)\n\nCreates a StructureFactor object for calculating and storing instantaneous structure factor intensities ùíÆ(ùê™). This data will be calculated from the spin-spin correlations of equilibrium snapshots, absent any dynamical information. ùíÆ(ùê™) data can be retrieved by calling instant_intensities.\n\nImportant note: When dealing with continuous (non-Ising) spins, consider creating a full DynamicStructureFactor object instead of an InstantStructureFactor. The former will provide full ùíÆ(ùê™œâ) data, from which ùíÆ(ùê™) can be obtained by integrating out œâ. During this integration step, Sunny can incorporate temperature- and œâ-dependent classical-to-quantum correction factors to produce more accurate ùíÆ(ùê™) estimates. See instant_intensities for more information.\n\nPrior to calling InstantStructureFactor, ensure that sys represents a good equilibrium sample. Additional sample data may be accumulated by calling add_sample!(sf, sys) with newly equilibrated sys configurations.\n\nThe following optional keywords are available:\n\nprocess_trajectory: Specifies a function that will be applied to the sample   trajectory before correlation analysis. Current options are :none and   :symmetrize. The latter will symmetrize the trajectory in time, which can   be useful for removing Fourier artifacts that arise when calculating the   correlations.\nobservables: Enables an advanced feature for SU(N) mode, allowing the user   to specify custom observables other than the three components of the dipole.   To use this features, observables must be given an N√óN√ónumops array,   where the final index is used to retrieve each N√óN operator.\ncorrelations: Specify which correlation functions are calculated, i.e. which   matrix elements Œ±Œ≤ of ùíÆ^Œ±Œ≤(qœâ) are calculated and stored.   Specified with a vector of tuples. By default Sunny records all auto- and   cross-correlations generated by the x, y, and z dipolar components (1, 2,   and 3 respectively). To retain only the xx and xy correlations, one would   set correlations=[(1,1), (1,2)]. If custom observables (observables) are   given, the indices are ordered in the same manner as the final index of   observables.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.add_sample!-Tuple{StructureFactor, System}","page":"Library API","title":"Sunny.add_sample!","text":"add_sample!(sf::StructureFactor, sys::System)\n\nadd_trajectory uses the spin configuration contained in the System to generate a correlation data and accumulate it into sf. For static structure factors, this involves analyzing the spin-spin correlations of the spin configuration provided. For a dynamic structure factor, a trajectory is calculated using the given spin configuration as an initial condition. The spin-spin correlations are then calculating in time and accumulated into sf. \n\nThis function will change the state of sys when calculating dynamical structure factor data. To preserve the initial state of sys, it must be saved separately prior to calling add_sample!. Alternatively, the initial spin configuration may be copied into a new System and this new System can be passed to add_sample!.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.all_exact_wave_vectors-Tuple{StructureFactor}","page":"Library API","title":"Sunny.all_exact_wave_vectors","text":"all_exact_wave_vectors(sf::StructureFactor; bzsize=(1,1,1))\n\nReturns all wave vectors for which sf contains exact values. bsize specifies the number of Brillouin zones to be included.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.all_sites-Tuple{System}","page":"Library API","title":"Sunny.all_sites","text":"all_sites(sys::System)\n\nAn iterator over all Sites in the system. \n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.broaden_energy-Tuple{StructureFactor, Any, Function}","page":"Library API","title":"Sunny.broaden_energy","text":"broaden_energy(sf::StructureFactor, vals, kernel::Function; negative_energies=false)\n\nPerforms a real-space convolution along the energy axis of an array of intensities. Assumes the format of the intensities array corresponds to what would be returned by intensities. kernel must be a function that takes two numbers: kernel(œâ, œâ‚ÇÄ), where œâ is a frequency, and œâ‚ÇÄ is the center frequency of the kernel. Sunny provides lorentzian for the most common use case:\n\nnewvals = broaden_energy(sf, vals, (œâ, œâ‚ÇÄ) -> lorentzian(œâ-œâ‚ÇÄ, 0.2))\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.browser-Tuple{String}","page":"Library API","title":"Sunny.browser","text":"browser(html_str; dir)\n\nLaunch a system browser to display the provided HTML string or SunnyViewer. If a directory dir is provided, an HTML file will be written at that location.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.connected_path-Tuple{Vector, Any}","page":"Library API","title":"Sunny.connected_path","text":"connected_path(qs::Vector, density)\n\nTakes a list of wave vectors, qs, and builds an expanded list of wave vectors that traces a path through the provided points. Also returned is a list of marker indices corresponding to the intput points. The density parameter controls the frequency of sampling.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.dispersion-Tuple{SpinWave, Vector{Float64}}","page":"Library API","title":"Sunny.dispersion","text":"dispersion\n\nComputes the spin excitation energy dispersion relations given a SpinWaveField and k. Note that k is a 3-vector, the units of k·µ¢ is 2œÄ/|a·µ¢|, where |a·µ¢| is the lattice constant of the chemical lattice.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.dmvec-Tuple{Any}","page":"Library API","title":"Sunny.dmvec","text":"dmvec(D)\n\nAntisymmetric matrix representation of the Dzyaloshinskii-Moriya pseudo-vector,\n\n  [  0    D[3] -D[2]\n   -D[3]   0    D[1]\n    D[2] -D[1]   0  ]\n\nUseful in the context of set_exchange!.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.dssf-Tuple{SpinWave, Vector{Float64}}","page":"Library API","title":"Sunny.dssf","text":"dssf\n\nComputes the dynamical spin structure factor: \n\nùíÆ·µÖ·µù(k, œâ) = 1/(2œÄN)‚à´dœâ ‚àë‚Çñ exp[i(œât - k‚ãÖr)] ‚ü®S·µÖ(r, t)S·µù(0, 0)‚ü©\n\nFor spin-wave theory at the linear level     ùíÆ·µÖ·µù(k, œâ) = ‚àë‚Çô |A‚Çô·µÖ·µù(k)|¬≤Œ¥[œâ-œâ‚Çô(k)]. \n\nThe output is a n√ó9 dimensional matrix that hold |A‚Çô·µÖ·µù(k)|¬≤, where n is the band index. \n\nSŒ±Œ≤_matrix[:, 1:3] ‚Üí xx, yy, zz. \n\nSŒ±Œ≤_matrix[:, 4:6] ‚Üí 2real(xy+yx), 2real(yz+zy), 2*real(zx+xz). \n\nSŒ±Œ≤_matrix[:, 7:9] ‚Üí 2imag(xy-yx), 2imag(yz-zy), 2*imag(zx-xz). \n\nNote that k is a 3-vector, the units of k·µ¢ is 2œÄ/|a·µ¢|, where |a·µ¢| is the lattice constant of the chemical lattice.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.enable_dipole_dipole!-Union{Tuple{System{N}}, Tuple{N}} where N","page":"Library API","title":"Sunny.enable_dipole_dipole!","text":"enable_dipole_dipole!(sys::System)\n\nEnables long-range dipole-dipole interactions,\n\n    -(Œº‚ÇÄ4œÄ) _ij  (3 (ùêå_jùê´_ij)(ùêå_iùê´_ij) - ùêå_iùêå_j)  ùê´_ij^3\n\nwhere the sum is over all pairs of spins (singly counted), including periodic images, regularized using the Ewald summation convention. The magnetic moments are ùêå_i = Œº_B g ùêí_i where g is the g-factor or g-tensor, and ùêí_i is the spin angular momentum dipole in units of ƒß. The Bohr magneton Œº_B and vacuum permeability Œº_0 are physical constants, with numerical values determined by the unit system.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.energy-Union{Tuple{System{N}}, Tuple{N}} where N","page":"Library API","title":"Sunny.energy","text":"energy(sys::System)\n\nComputes the total system energy.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.forces-Union{Tuple{System{N}}, Tuple{N}} where N","page":"Library API","title":"Sunny.forces","text":"forces(Array{Vec3}, sys::System)\n\nReturns the effective local field (force) at each site, ùêÅ = -Eùê¨.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.global_position-Tuple{System, Any}","page":"Library API","title":"Sunny.global_position","text":"global_position(sys::System, site::Site)\n\nPosition of a Site in global coordinates.\n\nTo precompute a full list of positions, one can use all_sites as below:\n\npos = [global_position(sys, site) for site in all_sites(sys)]\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.instant_intensities-Tuple{StructureFactor, Any, Any}","page":"Library API","title":"Sunny.instant_intensities","text":"instant_intensities(sf::StructureFactor, qs, mode; kwargs...)\n\nReturn ùíÆ(ùê™) intensities at wave vectors qs. The functionality is very similar to intensities, except the returned array has dimensions identical to qs. If called on a StructureFactor with dynamical information, i.e., ùíÆ(ùê™œâ), the œâ information is integrated out.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.intensities-Tuple{SpinWave, Vector{Float64}, Vector{Float64}, Float64}","page":"Library API","title":"Sunny.intensities","text":"intensities\n\nComputes the unpolarized inelastic neutron scattering intensities given a SpinWaveField, k, and œâ_list. Note that k is a 3-vector, the units of k·µ¢ is 2œÄ/|a·µ¢|, where |a·µ¢| is the lattice constant of the chemical lattice.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.intensities-Tuple{StructureFactor, Any, Any}","page":"Library API","title":"Sunny.intensities","text":"intensities(sf::StructureFactor, qs, mode; interpolation = nothing,\n                kT = nothing, formfactors = nothing, negative_energies = false)\n\nThe basic function for retrieving ùíÆ(ùê™œâ) information from a StructureFactor. Maps an array of wave vectors qs to an array of structure factor intensities, including an additional energy index. The values of œâ associated with the energy index can be retrieved by calling œâs. The three coordinates of each wave vector are measured in reciprocal lattice units, i.e., multiples of the reciprocal lattice vectors.\n\nmode: Should be one of :trace, :perp, or :full. Determines an optional   contraction on the indices Œ± and Œ≤ of ùíÆ^Œ±Œ≤(qœâ). Setting   trace yields _Œ± ùíÆ^Œ±Œ±(qœâ). Setting perp will employ a   polarization correction on the traced value. Setting full will return all   elements ùíÆ^Œ±Œ≤(ùê™œâ) with contraction.\ninterpolation: Since ùíÆ(ùê™ œâ) is calculated on a finite lattice, data is   only available at discrete wave vectors. By default, Sunny will round a   requested q to the nearest available wave vector. Linear interpolation can   be applied by setting interpolation=:linear.\nkT: If a temperature is provided, the intensities will be rescaled by a   temperature- and œâ-dependent classical-to-quantum factor. kT should be   specified when making comparisons with spin wave calculations or   experimental data.\nformfactors: To apply form factor corrections, provide this keyword with a   vector of FormFactors, one for each unique site in the unit cell. Sunny   will symmetry propagate the results to all equivalent sites.\nnegative_energies: If set to true, Sunny will return the periodic   extension of the energy axis. Most users will not want this.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.lattice_params-Tuple{StaticArraysCore.SMatrix{3, 3, Float64, 9}}","page":"Library API","title":"Sunny.lattice_params","text":"lattice_params(latvecs::Mat3)\n\nCompute the lattice parameters (a b c Œ± Œ≤ Œ≥) for the three lattice vectors provided as columns of latvecs. The inverse mapping is lattice_vectors.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.lattice_vectors-NTuple{6, Any}","page":"Library API","title":"Sunny.lattice_vectors","text":"lattice_vectors(a, b, c, Œ±, Œ≤, Œ≥)\n\nReturn the lattice vectors, as columns of the 33 output matrix, that correspond to the conventional unit cell defined by the lattice constants (a b c) and the angles (Œ± Œ≤ Œ≥) in degrees. The inverse mapping is lattice_params.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.lorentzian-Tuple{Any, Any}","page":"Library API","title":"Sunny.lorentzian","text":"lorentzian(x, Œ∑)\n\nReturns Œ∑(œÄ(x^2 + Œ∑^2)).\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.magnetic_moment-Tuple{System, Any}","page":"Library API","title":"Sunny.magnetic_moment","text":"magnetic_moment(sys::System, site::Site)\n\nGet the magnetic moment for a Site. The result is sys.dipoles[site] multiplied by the Bohr magneton and the g-tensor for site.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.plot_spins-Tuple{System}","page":"Library API","title":"Sunny.plot_spins","text":"plot_spins(sys::System; linecolor=:grey, arrowcolor=:red, linewidth=0.1,\n                            arrowsize=0.3, arrowlength=1.0, kwargs...)\n\nPlot the spin configuration defined by sys. kwargs are passed to GLMakie.arrows.        \n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.polarize_spin!-Union{Tuple{N}, Tuple{System{N}, Any, Any}} where N","page":"Library API","title":"Sunny.polarize_spin!","text":"polarize_spin!(sys::System, dir, site::Site)\n\nPolarize the spin at a Site along the direction dir.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.polarize_spins!-Union{Tuple{N}, Tuple{System{N}, Any}} where N","page":"Library API","title":"Sunny.polarize_spins!","text":"polarize_spins!(sys::System, dir)\n\nPolarize all spins in the system along the direction dir.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.position_to_site-Tuple{System, Any}","page":"Library API","title":"Sunny.position_to_site","text":"position_to_site(sys::System, r)\n\nConverts a position r to four indices of a Site. The coordinates of r are given in units of the lattice vectors for the original crystal. This function can be useful for working with systems that have been reshaped using reshape_geometry.\n\nExample\n\n# Find the `site` at the center of a unit cell which is displaced by four\n# multiples of the first lattice vector\nsite = position_to_site(sys, [4.5, 0.5, 0.5])\n\n# Print the dipole at this site\nprintln(sys.dipoles[site])\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.print_anisotropy_as_classical_spins-Tuple{Any}","page":"Library API","title":"Sunny.print_anisotropy_as_classical_spins","text":"function print_anisotropy_as_classical_spins(p)\n\nPrints a quantum operator (e.g. linear combination of Stevens operators) as a polynomial of spin expectation values in the classical limit.\n\nSee also print_anisotropy_as_stevens.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.print_anisotropy_as_stevens-Tuple{Any}","page":"Library API","title":"Sunny.print_anisotropy_as_stevens","text":"function print_anisotropy_as_stevens(p; N)\n\nPrints a quantum operator (e.g. a polynomial of the spin operators ùíÆ) as a linear combination of Stevens operators. The parameter N specifies the dimension of the SU(N) representation, corresponding to quantum spin magnitude S = (N-1)2. The special value N = 0 indicates the large-S classical limit.\n\nIn the output, the symbol X denotes the spin operator magnitude squared. Quantum spin operators ùíÆ of any finite dimension satisfy X = ùíÆ^2 = S (S+1). To take the large-S limit, however, we keep only leading order powers of S, such that X = S^2.\n\nThis function can be useful for understanding the conversions performed internally by set_anisotropy!.\n\nFor the inverse mapping, see print_anisotropy_as_classical_spins.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.print_bond-Tuple{Crystal, Bond}","page":"Library API","title":"Sunny.print_bond","text":"print_bond(cryst::Crystal, bond::Bond; b_ref::Bond)\n\nPrints symmetry information for bond bond. A symmetry-equivalent reference bond b_ref can optionally be provided to fix the meaning of the coefficients A, B, ...\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.print_site-Tuple{Any, Any}","page":"Library API","title":"Sunny.print_site","text":"print_site(cryst, i; R=I)\n\nPrint symmetry information for the site i, including allowed g-tensor and allowed anisotropy operator. An optional rotation matrix R can be provided to define the reference frame for expression of the anisotropy.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.print_suggested_frame-Tuple{Crystal, Int64}","page":"Library API","title":"Sunny.print_suggested_frame","text":"print_suggested_frame(cryst, i; digits=4)\n\nPrint a suggested reference frame, as a rotation matrix R, that can be used as input to print_site(). This is useful to simplify the description of allowed anisotropies.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.print_symmetry_table-Tuple{Crystal, Any}","page":"Library API","title":"Sunny.print_symmetry_table","text":"print_symmetry_table(cryst::Crystal, max_dist)\n\nPrint symmetry information for all equivalence classes of sites and bonds, up to a maximum bond distance of max_dist. Equivalent to calling print_bond(cryst, b) for every bond b in reference_bonds(cryst, max_dist), where Bond(i, i, [0,0,0]) refers to a single site i.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.print_wrapped_intensities-Union{Tuple{System{N}}, Tuple{N}} where N","page":"Library API","title":"Sunny.print_wrapped_intensities","text":"print_wrapped_intensities(sys::System; nmax=10)\n\nFor Bravais lattices: Prints up to nmax wavevectors according to their instantaneous (static) structure factor intensities, listed in descending order. For non-Bravais lattices: Performs the same analysis for each spin sublattice independently; the output weights are na√Øvely averaged over sublattices, without incorporating phase shift information. Only wavevectors within the first Brillouin zone are printed. Wavevector coordinates are given in reciprocal lattice units, such that each coordinate is between -12 and 12.  The output from this function will typically be used as input to suggest_magnetic_supercell.\n\nBecause this function does not incorporate phase information in its averaging over sublattices, the printed weights are not directly comparable with experiment. For that purpose, use InstantStructureFactor instead.\n\nThe weights printed by print_wrapped_intensities may be given a physical interpretation as follows: All possible q-vectors are periodically wrapped into the first Brillouin zone, and the average over their corresponding instantaneous structure factor intensities produce the output weights.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.propose_delta-Tuple{Any}","page":"Library API","title":"Sunny.propose_delta","text":"propose_delta(magnitude)\n\nGenerate a proposal function that adds a Gaussian perturbation to the existing spin state. In :dipole mode, the procedure is to first introduce a random three-vector perturbation ùê¨ = ùê¨ + ùê¨ Œæ and then return the properly normalized spin ùê¨ (ùê¨ùê¨). Each component of the random vector Œæ is Gaussian distributed with a standard deviation of magnitude; the latter is dimensionless and typically smaller than one. \n\nIn :SUN mode, the procedure is analogous, but now involving Gaussian perturbations to each of the N complex components of an SU(N) coherent state.\n\nIn the limit of very large magnitude, this function coincides with propose_uniform.\n\nFor use with LocalSampler.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.propose_flip-Union{Tuple{N}, Tuple{System{N}, Any}} where N","page":"Library API","title":"Sunny.propose_flip","text":"propose_flip\n\nFunction to propose pure spin flip updates in the context of a LocalSampler. Dipoles are flipped as ùê¨  -ùê¨. SU(N) coherent states are flipped using the time-reversal operator.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.propose_uniform","page":"Library API","title":"Sunny.propose_uniform","text":"propose_uniform\n\nFunction to propose a uniformly random spin update in the context of a LocalSampler. In :dipole mode, the result is a random three-vector with appropriate normalization. In :SUN mode, the result is a random SU(N) coherent state with appropriate normalization.\n\n\n\n\n\n","category":"function"},{"location":"library/#Sunny.reference_bonds-Tuple{Crystal, Float64}","page":"Library API","title":"Sunny.reference_bonds","text":"reference_bonds(cryst::Crystal, max_dist)\n\nReturns a full list of bonds, one for each symmetry equivalence class, up to distance max_dist. The reference bond b for each equivalence class is selected according to a scoring system that prioritizes simplification of the elements in basis_for_symmetry_allowed_couplings(cryst, b).\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.repeat_periodically-Union{Tuple{N}, Tuple{System{N}, Tuple{Int64, Int64, Int64}}} where N","page":"Library API","title":"Sunny.repeat_periodically","text":"repeat_periodically(sys::System{N}, counts) where N\n\nCreates a System identical to sys but repeated a given number of times in each dimension, specified by the tuple counts.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.reshape_geometry-Union{Tuple{N}, Tuple{System{N}, Any}} where N","page":"Library API","title":"Sunny.reshape_geometry","text":"reshape_geometry(sys::System, A)\n\nMaps an existing System to a new one that has the shape and periodicity of a requested supercell. The columns of the 33 integer matrix A represent the supercell lattice vectors measured in units of the original crystal lattice vectors.\n\nThe crystal unit cell may also need to be reshaped to achieve the desired periodicity of the requested supercell. If this is the case, the returned System object will be missing symmetry information. Consequently, certain operations will be unavailable for this system, e.g., setting interactions by symmetry propagation. In practice, one can set all interactions using the original system, and then reshape as a final step.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.resize_periodically-Union{Tuple{N}, Tuple{System{N}, Tuple{Int64, Int64, Int64}}} where N","page":"Library API","title":"Sunny.resize_periodically","text":"resize_periodically(sys::System{N}, latsize) where N\n\nCreates a System identical to sys but enlarged to a given number of unit cells in each lattice vector direction.\n\nAn error will be thrown if sys is incommensurate with latsize. Use reshape_geometry instead to reduce the volume, or to perform an incommensurate reshaping.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.rotate_operator-Tuple{Matrix, Any}","page":"Library API","title":"Sunny.rotate_operator","text":"rotate_operator(A, R)\n\nRotates the local quantum operator A according to the 33 rotation matrix R.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.set_anisotropy!-Union{Tuple{N}, Tuple{System{N}, MultivariatePolynomials.AbstractPolynomialLike, Int64}} where N","page":"Library API","title":"Sunny.set_anisotropy!","text":"set_anisotropy!(sys::System, op, i::Int)\n\nSet the single-ion anisotropy for the ith atom of every unit cell, as well as all symmetry-equivalent atoms. The parameter op may be a polynomial in symbolic spin operators ùíÆ[Œ±], or a linear combination of symbolic Stevens operators ùí™[k,q].\n\nThe characters ùíÆ and ùí™ can be copy-pasted from this help message, or typed at a Julia terminal using \\scrS or \\scrO followed by tab-autocomplete.\n\nFor systems restricted to dipoles, the anisotropy operators interactions will automatically be renormalized to achieve maximum consistency with the more variationally accurate SU(N) mode.\n\nExamples\n\n# An easy axis anisotropy in the z-direction\nset_anisotropy!(sys, -D*ùíÆ[3]^3, i)\n\n# The unique quartic single-ion anisotropy for a site with cubic point group\n# symmetry\nset_anisotropy!(sys, ùí™[4,0] + 5ùí™[4,4], i)\n\n# An equivalent expression of this quartic anisotropy, up to a constant shift\nset_anisotropy!(sys, 20*(ùíÆ[1]^4 + ùíÆ[2]^4 + ùíÆ[3]^4), i)\n\nSee also print_anisotropy_as_stevens.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.set_anisotropy_at!-Union{Tuple{N}, Tuple{System{N}, MultivariatePolynomials.AbstractPolynomialLike, Any}} where N","page":"Library API","title":"Sunny.set_anisotropy_at!","text":"set_anisotropy_at!(sys::System, op, site::Site)\n\nSets the single-ion anisotropy operator op for a single Site, ignoring crystal symmetry.  The system must support inhomogeneous interactions via to_inhomogeneous.\n\nSee also set_anisotropy!.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.set_biquadratic!-Union{Tuple{N}, Tuple{System{N}, Any, Bond}} where N","page":"Library API","title":"Sunny.set_biquadratic!","text":"set_biquadratic!(sys::System, J, bond::Bond)\n\nSets a scalar biquadratic interaction along bond, yielding a pairwise energy J (ùêí_iùêí_j)¬≤. This interaction will be propagated to equivalent bonds in consistency with crystal symmetry. Any previous biquadratic exchange interactions on these bonds will be overwritten.\n\nFor systems restricted to dipoles, the biquadratic interactions will automatically be renormalized to achieve maximum consistency with the more variationally accurate SU(N) mode. This renormalization introduces also a correction to the quadratic part of the exchange.\n\nSee also set_exchange!.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.set_biquadratic_at!-Union{Tuple{N}, Tuple{System{N}, Any, Any, Any}} where N","page":"Library API","title":"Sunny.set_biquadratic_at!","text":"set_biquadratic_at!(sys::System, J, site1::Site, site2::Site)\n\nSets the scalar biquadratic interaction along the single bond connecting two Sites, ignoring crystal symmetry. The system must support inhomogeneous interactions via to_inhomogeneous.\n\nSee also set_biquadratic!.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.set_exchange!-Union{Tuple{N}, Tuple{System{N}, Any, Bond}} where N","page":"Library API","title":"Sunny.set_exchange!","text":"set_exchange!(sys::System, J, bond::Bond)\n\nSets a 3√ó3 spin-exchange matrix J along bond, yielding a pairwise interaction energy ùêí_iJ ùêí_j. This interaction will be propagated to equivalent bonds in consistency with crystal symmetry. Any previous exchange interactions on these bonds will be overwritten. The parameter bond has the form Bond(i, j, offset), where i and j are atom indices within the unit cell, and offset is a displacement in unit cells.\n\nScalar J implies a pure Heisenberg exchange.\n\nAs a convenience, dmvec(D) can be used to construct the antisymmetric part of the exchange, where D is the Dzyaloshinskii-Moriya pseudo-vector. The resulting interaction will be ùêÉ(ùêí_iùêí_j).\n\nExamples\n\nusing Sunny, LinearAlgebra\n\n# An explicit exchange matrix\nJ1 = [2 3 0;\n     -3 2 0;\n      0 0 2]\nset_exchange!(sys, J1, bond)\n\n# An equivalent Heisenberg + DM exchange \nJ2 = 2*I + dmvec([0,0,3])\nset_exchange!(sys, J2, bond)\n\nSee also set_biquadratic!, dmvec.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.set_exchange_at!-Union{Tuple{N}, Tuple{System{N}, Any, Any, Any}} where N","page":"Library API","title":"Sunny.set_exchange_at!","text":"set_exchange_at!(sys::System, J, site1::Site, site2::Site)\n\nSets the exchange interaction along the single bond connecting two Sites, ignoring crystal symmetry. The system must support inhomogeneous interactions via to_inhomogeneous.\n\nSee also set_exchange!, sites_to_bond.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.set_external_field!-Tuple{System, Any}","page":"Library API","title":"Sunny.set_external_field!","text":"set_external_field!(sys::System, B::Vec3)\n\nSets the external field B that couples to all spins.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.set_external_field_at!-Tuple{System, Any, Any}","page":"Library API","title":"Sunny.set_external_field_at!","text":"set_external_field_at!(sys::System, B::Vec3, site::Site)\n\nSets a Zeeman coupling between a field B and a single spin. Site includes a unit cell and a sublattice index.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.set_vacancy_at!-Union{Tuple{N}, Tuple{System{N}, Any}} where N","page":"Library API","title":"Sunny.set_vacancy_at!","text":"set_vacancy_at!(sys::System, site::Site)\n\nMake a single site nonmagnetic. Site includes a unit cell and a sublattice index.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.sites_to_bond-Union{Tuple{N}, Tuple{System{N}, CartesianIndex{4}, CartesianIndex{4}}} where N","page":"Library API","title":"Sunny.sites_to_bond","text":"sites_to_bond(sys::System, site1::Site, site2::Site)\n\nGiven two Sites for a possibly reshaped system, return the corresponding Bond appropriate to the original (unreshaped) crystal. This bond can be used for symmetry analysis, e.g., as input to print_bond.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.spherical_shell-Tuple{StructureFactor, Any, Any}","page":"Library API","title":"Sunny.spherical_shell","text":"spherical_shell(sf::StructureFactor, radius, density)\n\nReturns a set of wave vectors lying on a sphere of specified radius, where radius is given in √Ö^-1. density controls how many points to select per √Ö^-2. \n\nThe points are generated by mapping a Fibonacci lattice onto a sphere. \n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.step!","page":"Library API","title":"Sunny.step!","text":"step!(sys::System, dynamics)\n\nAdvance the spin configuration one dynamical time-step. The dynamics object may be a continuous spin dynamics, such as Langevin or ImplicitMidpoint, or it may be a discrete Monte Carlo sampling scheme such as LocalSampler.\n\n\n\n\n\n","category":"function"},{"location":"library/#Sunny.subcrystal-Union{Tuple{N}, Tuple{Crystal, Vararg{String, N}}} where N","page":"Library API","title":"Sunny.subcrystal","text":"subcrystal(cryst, types) :: Crystal\n\nFilters sublattices of a Crystal by atom types, keeping the space group unchanged.\n\nsubcrystal(cryst, classes) :: Crystal\n\nFilters sublattices of Crystal by equivalence classes, keeping the space group unchanged.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.suggest_magnetic_supercell-Tuple{Any, Any}","page":"Library API","title":"Sunny.suggest_magnetic_supercell","text":"suggest_magnetic_supercell(qs, latsize)\n\nSuggests a magnetic supercell, in units of the crystal lattice vectors, that is consistent with periodicity of the wavevectors in qs. An upper bound for the supercell is given by latsize, which is measured in units of lattice vectors, and must be commensurate with the wavevectors.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.to_inhomogeneous-Union{Tuple{System{N}}, Tuple{N}} where N","page":"Library API","title":"Sunny.to_inhomogeneous","text":"to_inhomogeneous(sys::System)\n\nReturns a copy of the system that allows for inhomogeneous interactions, which can be set using set_anisotropy_at!, set_exchange_at!, set_biquadratic_at!, and set_vacancy_at!.\n\nInhomogeneous systems do not support symmetry-propagation of interactions or system reshaping.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.view_crystal-Tuple{Crystal, Real}","page":"Library API","title":"Sunny.view_crystal","text":"view_crystal(crystal::Crystal, max_dist::Real)\n\nCreate and show crystal viewer in a VSCode or Jupyter notebook environment. The result can also be displayed using browser().\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.œâs-Tuple{StructureFactor}","page":"Library API","title":"Sunny.œâs","text":"œâs(sf::StructureFactor; negative_energies=false)\n\nReturn the œâ values for the energy index of a StructureFactor. By default, only returns values for non-negative energies, which corresponds to the default output of intensities. Set negative_energies to true to retrieve all œâ values.\n\n\n\n\n\n","category":"method"},{"location":"library/#Sunny.@mix_proposals-Tuple","page":"Library API","title":"Sunny.@mix_proposals","text":"@propose_mix weight1 propose1 weight2 propose2 ...\n\nMacro to generate a proposal function that randomly selects among the provided functions according to the provided probability weights. For use with LocalSampler.\n\nExample\n\n# A proposal function that proposes a spin flip 40% of the time, and a\n# Gaussian perturbation 60% of the time.\n@propose_mix 0.4 propose_flip 0.6 propose_delta(0.2)\n\n\n\n\n\n","category":"macro"},{"location":"library/#Plotting","page":"Library API","title":"Plotting","text":"","category":"section"},{"location":"library/","page":"Library API","title":"Library API","text":"To reduce package load times, certain plotting functions are only available when the user explicitly executes \"using GLMakie\".","category":"page"},{"location":"structure-factor/#Structure-Factor-Calculations","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"","category":"section"},{"location":"structure-factor/#Overview","page":"Structure Factor Calculations","title":"Overview","text":"","category":"section"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"The dynamical structure factor is of fundamental importance for characterizing a magnetic system, and facilitates quantitative comparison between theory and experimental scattering data.","category":"page"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"Consider, for example, a two-point dynamical spin correlation function, s^Œ±(ùê±+Œîùê± t+Œît) s^Œ≤(ùê± t). Here s^Œ±(ùê± t) represents the time dynamics of a spin dipole component Œ± at position ùê±, and brackets represent an average over equilibrium initial conditions and over (ùê± t). The dynamical structure factor is defined as the Fourier transform of this two-point correlation in both space and time, up to an overall scaling factor. Using the convolution theorem, the result is,","category":"page"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"ùíÆ^Œ±Œ≤(ùê™ œâ) = frac1V s^Œ±(ùê™ œâ)^ast s^Œ≤(ùê™ œâ) ","category":"page"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"with V the system volume. We will restrict attention to lattice systems with periodic boundaries.","category":"page"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"Consider a crystal unit cell defined by three lattice vectors ùêö_1 ùêö_2 ùêö_3, and linear system sizes L_1 L_2 L_3 measured in unit cells. The allowed momentum vectors take on discrete values ùê™ = sum_Œ±=1^3 m_Œ± ùêõ_Œ±  L_Œ±, where m_Œ± are an integers and the reciprocal lattice vectors ùêõ_Œ± are defined to satisfy ùêö_Œ±  ùêõ_Œ≤ = 2œÄ Œ¥_Œ±Œ≤. For a Bravais lattice, ùê™ will be periodic in the first Brillouin zone, i.e., under any shift ùê™  ùê™  ùêõ_Œ±. More generally, consider a non-Bravais lattice such that each unit cell may contain multiple spins. By partitioning spins s_j(ùê±t) according to their sublattice index j, the relevant momenta ùê™ remain discretized as above, but now periodicity in the first Brillouin zone is lost. The structure factor may be written as a phase-average over the displacements between sublattices ùê´_jk,","category":"page"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"ùíÆ^Œ±Œ≤(ùê™ œâ) = _jk e^i ùê´_jk  ùê™ ùíÆ^Œ±Œ≤_jk(ùê™ œâ) ","category":"page"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"From a theoretical perspective, the quantity","category":"page"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"ùíÆ^Œ±Œ≤_jk(ùê™ œâ) = frac1V s_j^Œ±(ùê™ œâ)^ast s_k^Œ≤(ùê™ œâ)","category":"page"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"is fundamental. For each sublattice j, the data s_j^Œ±(ùê™ œâ) can be efficiently obtained by fast Fourier tranformation of a real space configuration s_j^Œ±(ùê± t). Internally, Sunny will calculate and store the discrete ùíÆ^Œ±Œ≤_jk(ùê™ œâ) correlation data, and use this to construct ùíÆ^Œ±Œ≤(ùê™œâ) intensities that can be compared with experiment.","category":"page"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"Calculating this structure factor involves several steps, with various possible settings. Sunny provides a number of tools to facilitate this calculation and to extract information from the results. These tools are briefly outlined below. Please see the Examples for a \"real life\" use case. Detailed function information is available in the Library API.","category":"page"},{"location":"structure-factor/#Basic-Usage","page":"Structure Factor Calculations","title":"Basic Usage","text":"","category":"section"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"The basic data type for calculating, storing and retrieving structure factor data is StructureFactor. Rather than creating a StructureFactor directly, one should call either DynamicStructureFactor, for ùíÆ^Œ±Œ≤(ùê™œâ), or InstantStructureFactor, for ùíÆ^Œ±Œ≤(ùê™). These functions will configure and return an appropriate StructureFactor.","category":"page"},{"location":"structure-factor/#Calculating-a-dynamical-stucture-factor:-ùíÆ(ùê™,œâ)","page":"Structure Factor Calculations","title":"Calculating a dynamical stucture factor: ùíÆ(ùê™œâ)","text":"","category":"section"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"Calling DynamicStructureFactor(sys; Œît, œâmax, nœâ) will create a StructureFactor for the user and calculate an initial sample. There are three keywords that must be specified. These keywords will determine the dynamics used to calculate the sample and, consequently, the œâ information that will be available after the calculation has completed.","category":"page"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"Œît: Determines the step size used for simulating the dynamics. A smaller number will require proportionally more calculation time. While a smaller Œît will enable the resolution of higher energies, Œît is typically selected to ensure numerical stability rather than to maximize the largest œâ value. A safe choice is to use the smaller value of Œît = 0.1/(J* S^2) or Œît = 0.1/(D * S), where S is magnetic moment of the largest local spin (as specified in SpinInfo), J is the parameter governing the largest bilinear interaction (e.g. exchange), and D is the parameter governing the largest single-site term of the Hamiltonian (e.g., anisotropy or Zeeman term).\nœâmax: Sets the maximum resolved energy. Note that this is not independent of Œît. If œâmax too large, Sunny will throw an error and ask you to choose a smaller Œît. \nnœâ: Determines the number of energy bins to resolve. A larger number will require more calculation time.","category":"page"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"Upon constructing DynamicStructureFactor, classical spin dynamics will be performed, and spin correlation data will be accumulated into ùíÆ^Œ±Œ≤(ùê™œâ). The input sys must be a spin configuration in good thermal equilibrium, e.g., using the continuous Langevin dynamics or using single spin flip trials with LocalSampler. The statistical quality of the ùíÆ^Œ±Œ≤(ùê™œâ) can be improved by generating a decorrelated spin configuration in sys, and then calling add_sample!.","category":"page"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"The outline of typical use case might look like this:","category":"page"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"# Make a `StructureFactor` and calculate an initial sample\nsf = DynamicStructureFactor(sys; Œît=0.05, œâmax=10.0, nœâ=100) \n\n# Add additional samples\nfor _ in 1:nsamples\n   decorrelate_system(sys) # Perform some type of Monte Carlo simulation\n   add_sample!(sf, sys)    # Use spins to calculate and accumulate new sample of ùíÆ(ùê™,œâ)\nend","category":"page"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"The calculation may be configured in a number of ways; see the DynamicStructureFactor documentation for a list of all keywords.","category":"page"},{"location":"structure-factor/#Calculating-an-instantaneous-(\"static\")-structure-factor:-ùíÆ(ùê™)","page":"Structure Factor Calculations","title":"Calculating an instantaneous (\"static\") structure factor: ùíÆ(ùê™)","text":"","category":"section"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"Sunny provides two methods for calculating instantaneous, or static, structure factors: ùíÆ^Œ±Œ≤(ùê™). The first involves calculating spin-spin correlations at single instances of time. The second involves calculating a dynamic structure factor first and integrating out the œâ information. The advantage of the latter approach is that it enables application of an œâ-dependent classical-to-quantum rescaling of structure factor intensities, a method that should be preferred whenever comparing results to experimental data or spin wave calculations. A disadvantage of this approach is that it is computationally more expensive. There are also many cases when it is not straightforward to calculate a meaningful dynamics, as when working with Ising spins. In this section we will discuss how to calculate instantaneous structure factors from fixed spin configurations. Information about calculating instantaneous data from a dynamic structure factor can be found in the following section.","category":"page"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"The basic usage for the instantaneous case is very similar to the dynamic case, except one calls InstantStructureFactor instead of DynamicStructureFactor. Note that there are no required keywords as there is no need to specify any dynamics. InstantStructureFactor will immediately calculate a sample of ùíÆ(ùê™) using the spin configuration contained in sys. It is therefore important that sys be properly thermalized before calling this function. Additional samples may be added with add_sample!(sf, sys), just as was done in the dynamic case. As was true there, it is important to ensure that the spins in sys represents a new equilibrium sample before calling add_sample!.","category":"page"},{"location":"structure-factor/#Extracting-information-from-structure-factors","page":"Structure Factor Calculations","title":"Extracting information from structure factors","text":"","category":"section"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"The basic function for extracting information from a dynamic StructureFactor at a particular wave vector, ùê™, is intensities. It takes a StructureFactor, a list of wave vectors, and a contraction mode. For example, intensities(sf, [[0.0, 0.5, 0.5]], :trace) will calculate intensities for the wavevector ùê™ = (ùêõ_2 + ùêõ_3)2. The option :trace will contract spin indices, returning ùíÆ^Œ±Œ±(ùê™œâ), summing over Œ±. The option :perp will instead perform a contraction that includes polarization corrections. The option :full will return data for the full tensor ùíÆ^Œ±Œ≤(ùê™œâ). intensities returns a list of nœâ elements. The corresponding œâ values can be retrieved by calling œâs.","category":"page"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"Since Sunny currently only calculates the structure factor on a finite lattice, it is important to realize that exact information is only available at a discrete set of wave vectors. Specifically, for each axis index i, we will get information at q_i = fracnL_i, where n runs from (frac-L_i2+1) to fracL_i2 and L_i is the linear dimension of the lattice used for the calculation. If you request a wave vector that does not fall into this set, Sunny will automatically round to the nearest ùê™ that is available. If intensities is given the keyword argument interpolation=:linear, Sunny will use trilinear interpolation to determine the results at the requested wave vector. ","category":"page"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"To retrieve the intensities at all wave vectors for which there is exact data, first call the function all_exact_wave_vectors to generate a list of qs. This takes an optional keyword argument bzsize, which must be given a tuple of three integers specifying the number of Brillouin zones to calculate, e.g., bzsize=(2,2,2). The resulting list of wave vectors may then be passed to intensities.","category":"page"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"The convenience function connected_path returns a list of wavevectors sampled along a path that connects specified ùê™ points. This list can be used as an input to intensities. Another convenience method, spherical_shell will provide a list of wave vectors on a sphere of a specified radius. This is useful for powder averaging. ","category":"page"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"A number of keyword arguments are available which modify the calculation of structure factor intensity. See the documentation of intensities for a full list. It is generally recommended to provide a value to kT corresponding to the temperature of sampled configurations. Given kT, Sunny will apply an energy- and temperature-dependent classical-to-quantum rescaling of intensities. ","category":"page"},{"location":"structure-factor/","page":"Structure Factor Calculations","title":"Structure Factor Calculations","text":"To retrieve intensity data from a instantaneous structure factor, use instant_intensities, which shares keyword arguments with intensities. This function may also be used to calculate instantaneous information from a dynamical structure factor. Note that it is important to supply a value to kT to reap the benefits of this approach over simply calculating a static structure factor at the outset. ","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"EditURL = \"https://github.com/SunnySuite/Sunny.jl/blob/main/examples/fei2_tutorial.jl\"","category":"page"},{"location":"examples/fei2_tutorial/#Case-Study:-FeI_{2}","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"","category":"section"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"FeI_2 is an effective spin-1 material with strong single-ion anisotropy. Quadrupolar fluctuations give rise to a single-ion bound state that cannot be described by a dipole-only model. This tutorial illustrates how to use the classical dynamics of SU(N) coherent state to model the magnetic behavior in FeI_2. The original study was performed in Bai et al., Nature Physics 17, 467‚Äì472 (2021).","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"<img src=\"https://raw.githubusercontent.com/SunnySuite/Sunny.jl/main/docs/src/assets/FeI2_crystal.jpg\" style=\"float: left;\" width=\"400\">","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"The Fe atoms are arranged in stacked triangular layers. The effective spin interactions include various anisotropic exchange interactions, and a strong single-ion anisotropy:","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"mathcalH=sum_(ij) J^alphabeta_ij S^alpha_i S^beta_j - Dsum_i left(S^zright)^2","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"We will formulate this Hamiltonian in Sunny and then calculate its dynamic structure factor.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Begin by importing Sunny and GLMakie, a plotting package.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"using Sunny, GLMakie","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"If you see an error Package <X> not found in current path, add the package by typing ] add <X> at the Julia prompt.","category":"page"},{"location":"examples/fei2_tutorial/#Crystals-and-symmetry-analysis","page":"Case Study: FeI_2","title":"Crystals and symmetry analysis","text":"","category":"section"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"A Crystal describes the crystallographic unit cell and will usually be loaded from a .cif file. Here, we instead build a crystal by listing all atoms and their types.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"a = b = 4.05012  # Lattice constants for triangular lattice\nc = 6.75214      # Spacing in the z-direction\n\nlatvecs = lattice_vectors(a, b, c, 90, 90, 120) # A 3x3 matrix of lattice vectors that\n                                                 # define the conventional unit cell\npositions = [[0,0,0], [1/3, 2/3, 1/4], [2/3, 1/3, 3/4]]  # Positions of atoms in fractions\n                                                         # of lattice vectors\ntypes = [\"Fe\", \"I\", \"I\"]\nFeI2 = Crystal(latvecs, positions; types)","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Crystal\nHM symbol 'P -3 m 1' (164)\nLattice params a=4.05, b=4.05, c=6.752, Œ±=90¬∞, Œ≤=90¬∞, Œ≥=120¬∞\nCell volume 95.92\nType 'Fe', Wyckoff 1a (point group '-3m.'):\n   1. [0, 0, 0]\nType 'I', Wyckoff 2d (point group '3m.'):\n   2. [0.3333, 0.6667, 0.25]\n   3. [0.6667, 0.3333, 0.75]\n","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Observe that Sunny inferred the space group, 'P -3 m 1' (164) and labeled the atoms according to their point group symmetries.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Only the Fe atoms are magnetic, so we discard the I ions using subcrystal.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"cryst = subcrystal(FeI2, \"Fe\")","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Crystal\nHM symbol 'P -3 m 1' (164)\nLattice params a=4.05, b=4.05, c=6.752, Œ±=90¬∞, Œ≤=90¬∞, Œ≥=120¬∞\nCell volume 95.92\nType 'Fe', Wyckoff 1a (point group '-3m.'):\n   1. [0, 0, 0]\n","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Importantly, cryst retains the spacegroup symmetry of the full FeI_2 crystal. This information will be used, for example, to propagate exchange interactions between symmetry-equivalent bonds.","category":"page"},{"location":"examples/fei2_tutorial/#Spin-systems","page":"Case Study: FeI_2","title":"Spin systems","text":"","category":"section"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"To simulate a system of many spins, construct a System.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"sys = System(cryst, (4,4,4), [SpinInfo(1,S=1)], :SUN, seed=2)","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"System [SU(3)]\nCell size 1, Lattice size (4, 4, 4)\n","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"The system includes 444 unit cells, i.e. 64 Fe atoms, each with spin S=1. The default g-factor is 2, but this could be overriden with an additional argument to SpinInfo. Spin S=1 involves a superposition of 2S+1=3 distinct angular momentum states. In :SUN mode, this superposition will be modeled using the formalism of SU(3) coherent states, which captures both dipolar and quadrupolar fluctuations. For the more traditional dipole dynamics, use :dipole mode instead.","category":"page"},{"location":"examples/fei2_tutorial/#Interactions-and-anisotropies","page":"Case Study: FeI_2","title":"Interactions and anisotropies","text":"","category":"section"},{"location":"examples/fei2_tutorial/#Symmetry-analysis","page":"Case Study: FeI_2","title":"Symmetry analysis","text":"","category":"section"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"The next step is to add interactions to the system. The command print_symmetry_table shows all symmetry-allowed interactions up to a cutoff distance.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"print_symmetry_table(cryst, 8.0)","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Atom 1\nType 'Fe', position [0, 0, 0], multiplicity 1\nAllowed g-tensor: | A  0  0 |\n                  | 0  A  0 |\n                  | 0  0  B |\nAllowed anisotropy in Stevens operators ùí™[k,q]:\n    c‚ÇÅ*ùí™[2,0] +\n    c‚ÇÇ*ùí™[4,-3] + c‚ÇÉ*ùí™[4,0] +\n    c‚ÇÑ*ùí™[6,-3] + c‚ÇÖ*ùí™[6,0] + c‚ÇÜ*ùí™[6,6]\n\nBond(1, 1, [1, 0, 0])\nDistance 4.05012, coordination 6\nConnects 'Fe' at [0, 0, 0] to 'Fe' at [1, 0, 0]\nAllowed exchange matrix: | A  0  0 |\n                         | 0  B  D |\n                         | 0  D  C |\n\nBond(1, 1, [0, 0, 1])\nDistance 6.75214, coordination 2\nConnects 'Fe' at [0, 0, 0] to 'Fe' at [0, 0, 1]\nAllowed exchange matrix: | A  0  0 |\n                         | 0  A  0 |\n                         | 0  0  B |\n\nBond(1, 1, [1, 2, 0])\nDistance 7.01501361675086, coordination 6\nConnects 'Fe' at [0, 0, 0] to 'Fe' at [1, 2, 0]\nAllowed exchange matrix: | A  0  0 |\n                         | 0  B  D |\n                         | 0  D  C |\n\nBond(1, 1, [1, 0, 1])\nDistance 7.8736818956572, coordination 12\nConnects 'Fe' at [0, 0, 0] to 'Fe' at [1, 0, 1]\nAllowed exchange matrix: | A  F  E |\n                         | F  B  D |\n                         | E  D  C |\n\n","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"The allowed g-tensor is expressed as a 3√ó3 matrix in the free coefficients A, B, ... The allowed single-ion anisotropy is expressed as a linear combination of Stevens operators. The latter correspond to polynomials of the spin operators, as we will describe below.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"The allowed exchange interactions are given as a 3√ó3 matrix for representative bonds. The notation Bond(i, j, n) indicates a bond between atom indices i and j, with cell offset n. In the general case, it will be necessary to associate atom indices with their positions in the unit cell; these can be viewed with display(cryst). Note that the order of the pair (i j) is significant if the exchange tensor contains antisymmetric Dzyaloshinskii‚ÄìMoriya (DM) interactions.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"In the case of FeI_2, Bond(1, 1, [1,0,0]) is one of the 6 nearest-neighbor Fe-Fe bonds on a triangular lattice layer, and Bond(1, 1, [0,0,1]) is an Fe-Fe bond between layers.","category":"page"},{"location":"examples/fei2_tutorial/#Assigning-interactions-and-anisotropies","page":"Case Study: FeI_2","title":"Assigning interactions and anisotropies","text":"","category":"section"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"The function set_exchange! assigns an exchange interaction to a bond, and will propagate the interaction to all symmetry-equivalent bonds in the unit cell. The FeI_2 interactions below follow Bai et al.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"J1pm   = -0.236\nJ1pmpm = -0.161\nJ1zpm  = -0.261\nJ2pm   = 0.026\nJ3pm   = 0.166\nJ‚Ä≤0pm  = 0.037\nJ‚Ä≤1pm  = 0.013\nJ‚Ä≤2apm = 0.068\n\nJ1zz   = -0.236\nJ2zz   = 0.113\nJ3zz   = 0.211\nJ‚Ä≤0zz  = -0.036\nJ‚Ä≤1zz  = 0.051\nJ‚Ä≤2azz = 0.073\n\nJ1xx = J1pm + J1pmpm\nJ1yy = J1pm - J1pmpm\nJ1yz = J1zpm\n\nset_exchange!(sys, [J1xx   0.0    0.0;\n                    0.0    J1yy   J1yz;\n                    0.0    J1yz   J1zz], Bond(1,1,[1,0,0]))\nset_exchange!(sys, [J2pm   0.0    0.0;\n                    0.0    J2pm   0.0;\n                    0.0    0.0    J2zz], Bond(1,1,[1,2,0]))\nset_exchange!(sys, [J3pm   0.0    0.0;\n                    0.0    J3pm   0.0;\n                    0.0    0.0    J3zz], Bond(1,1,[2,0,0]))\nset_exchange!(sys, [J‚Ä≤0pm  0.0    0.0;\n                    0.0    J‚Ä≤0pm  0.0;\n                    0.0    0.0    J‚Ä≤0zz], Bond(1,1,[0,0,1]))\nset_exchange!(sys, [J‚Ä≤1pm  0.0    0.0;\n                    0.0    J‚Ä≤1pm  0.0;\n                    0.0    0.0    J‚Ä≤1zz], Bond(1,1,[1,0,1]))\nset_exchange!(sys, [J‚Ä≤2apm 0.0    0.0;\n                    0.0    J‚Ä≤2apm 0.0;\n                    0.0    0.0    J‚Ä≤2azz], Bond(1,1,[1,2,1]))","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"The function set_anisotropy! assigns a single-ion anisotropy. It takes an abstract operator and an atom index. The operator may be a polynomial of spin operators or a linear combination of Stevens operators. Sunny provides special symbols for their construction: ùíÆ is a vector of the three spin operators and ùí™ are the symbolic Stevens operators. Here we construct an easy-axis anisotropy.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"D = 2.165\nset_anisotropy!(sys, -D*ùíÆ[3]^2, 1)","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Any anisotropy operator can be converted to a linear combination of Stevens operators with print_anisotropy_as_stevens.","category":"page"},{"location":"examples/fei2_tutorial/#Calculating-structure-factor-intensities","page":"Case Study: FeI_2","title":"Calculating structure factor intensities","text":"","category":"section"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"In the remainder of this tutorial, we will examine Sunny's tools for calculating structure factors using generalized SU(N) classical dynamics. This will involve the sampling of spin configurations from the Boltzmann distribution at a finite temperature. Spin-spin correlations measured dynamically then provide an estimate of the structure factor mathcalS^alphabeta(mathbfqomega).","category":"page"},{"location":"examples/fei2_tutorial/#Simulated-annealing","page":"Case Study: FeI_2","title":"Simulated annealing","text":"","category":"section"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"The Langevin dynamics of SU(N) coherent states can be used to sample spin configurations in thermal equlibrium. Begin by constructing a Langevin object.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Œît = 0.05/D    # Single-ion anisotropy is the strongest interaction, so 1/D is","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"0.023094688221709007","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"a natural dynamical time-scale (in units with ƒß=1).","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Œª = 0.1        # Dimensionless magnitude of coupling to thermal bath\nlangevin = Langevin(Œît; kT=0, Œª);","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Attempt to find a low-energy spin configuration by lowering the temperature kT from 2 to 0 using 20,000 Langevin time-steps.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"randomize_spins!(sys)\nfor kT in range(2, 0, 20_000)\n    langevin.kT = kT\n    step!(sys, langevin)\nend","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Because the quench was relatively fast, it is expected to find defects in the magnetic order. These can be visualized.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"plot_spins(sys; arrowlength=2.5, linewidth=0.75, arrowsize=1.5)","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Figure()","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"If we had used a slower annealing procedure, involving 100,000 or more Langevin time-steps, it would very likely find the correct ground state. Instead, for purposes of illustration, let's analyze the imperfect spin configuration currently stored in sys.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"An experimental probe of magnetic order order is the 'instantaneous' or 'static' structure factor intensity, available via InstantStructureFactor and related functions. To infer periodicities of the magnetic supercell, however, it is sufficient to look at the structure factor weights of spin sublattices individually, without phase averaging. This information is provided by print_wrapped_intensities (see the API documentation for a physical interpretation).","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"print_wrapped_intensities(sys)","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Dominant wavevectors for spin sublattices:\n\n    [0, -1/4, 1/4]         49.79% weight\n    [0, 1/4, -1/4]         49.79%\n    [1/4, 0, 1/2]           0.02%\n    [-1/4, 0, 1/2]          0.02%\n    [-1/4, 1/4, 1/4]        0.02%\n    [1/4, -1/4, -1/4]       0.02%\n    [0, 0, 0]               0.01%\n    [1/4, 1/4, 1/2]         0.01%\n    [-1/4, -1/4, 1/2]       0.01%\n    [-1/4, 1/2, 1/4]        0.01%\n    [1/4, 1/2, -1/4]        0.01%\n    ...                     ...\n","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"The above is consistent with known results. The zero-field energy-minimizing magnetic structure of FeI_2 is single-q. If annealing were perfect, then spontaneous symmetry breaking would select one of q = 0 -14 14, 14 0 14, or -141414.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Let's break the symmetry by hand. Given a list of q modes, Sunny can suggest a magnetic supercell with appropriate periodicity. The result is printed in units of the crystal lattice vectors.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"suggest_magnetic_supercell([[0, -1/4, 1/4]], sys.latsize)","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Suggested magnetic supercell in multiples of lattice vectors:\n\n    [1 0 0; 0 1 -2; 0 1 2]\n\nfor wavevectors [[0, -1/4, 1/4]].\n","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"The function reshape_geometry allows an arbitrary reshaping of the system. After selecting the supercell geometry, it becomes much easier to find the energy-minimizing spin configuration.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"sys_supercell = reshape_geometry(sys, [1 0 0; 0 1 -2; 0 1 2])\n\nlangevin.kT = 0\nfor i in 1:10_000\n    step!(sys_supercell, langevin)\nend\n\nplot_spins(sys_supercell; arrowlength=2.5, linewidth=0.75, arrowsize=1.5)","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Figure()","category":"page"},{"location":"examples/fei2_tutorial/#Linear-spin-wave-theory","page":"Case Study: FeI_2","title":"Linear spin wave theory","text":"","category":"section"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Now that we have found the ground state for a magnetic supercell, we can immediately proceed to perform zero-temperature calculations using linear spin wave theory. We begin by instantiating a SpinWave type.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"sys_sw = construct_magnetic_supercell(sys_supercell, [1 0 0; 0 1 -2; 0 1 2])\nsw = SpinWave(sys_sw);","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"The dispersion relation can be determined providing dispersion with a SpinWave and a wave vector. For each wave vector, dispersion will return a list of energies, one for each band.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"qs = -1.5:0.01:1.5  # range for a component of wave vector\ndr = [dispersion(sw, [q, 0.0, 0.0]) for q in qs]\n\nnummodes = length(dr[1])\nfig = Figure()\nax = Axis(fig[1,1]; xlabel=\"(H,0,0)\", ylabel=\"Energy (meV)\")\nfor i in 1:nummodes\n    lines!(ax, qs,  [x[i] for x in dr]; color=:blue)\nend\nlimits!(ax, -1.5, 1.5, 0.0, 7.5)\nfig","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Figure()","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Intensity information, useful for comparison with inelastic neutron scattering (INS) data, can be calculated with intensities. By default this function applies a polarization correction.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"energies = collect(0.0:0.01:7.5)\nis = zeros(length(qs), length(energies))  # Preallocate intensity array\nŒ≥ = 0.05                            # Lorentzian broadening parameter\nfor (n, q) in enumerate(qs)\n    is[n,:] = intensities(sw, [q,0.0,0.0], energies, Œ≥)\nend\nheatmap(qs, energies, is; axis=(xlabel = \"(H,0,0)\", ylabel=\"Energy (meV)\"))","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"FigureAxisPlot()","category":"page"},{"location":"examples/fei2_tutorial/#Dynamical-structure-factors-with-classical-dynamics","page":"Case Study: FeI_2","title":"Dynamical structure factors with classical dynamics","text":"","category":"section"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Linear spin wave calculations are very useful for getting quick, high-quality, results at zero temperature. Moreover, these results are obtained in the thermodynamic limit. Classical dynamics may also be used to produce similar results, albeit at a higher computational cost and on a finite sized lattice. The classical approach nonetheless provides a number of complementary advantages: it is possible perform simulations at finite temperature while retaining nonlinearities; out-of-equilibrium behavior may be examined directly; and it is straightforward to incorporate inhomogenties, chemical or otherwise.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Because classical simulations are conducted on a finite-sized lattice, obtaining acceptable resolution in momentum space requires the use of a larger system size. We can now resize the magnetic supercell to a much larger simulation volume, provided as multiples of the original unit cell.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"sys_large = resize_periodically(sys_supercell, (16,16,4))\nplot_spins(sys_large; arrowlength=2.5, linewidth=0.75, arrowsize=1.5)","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Figure()","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Apply Langevin dynamics to thermalize the system to a target temperature.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"kT = 0.5 * meV_per_K     # 0.5K in units of meV\nlangevin.kT = kT\n\nfor _ in 1:10_000\n    step!(sys_large, langevin)\nend","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"We can measure the DynamicStructureFactor by integrating the Hamiltonian dynamics of SU(N) coherent states. Three keyword parameters are required to determine the œâ information that will be calculated: an integration step size, the number of œâs to resolve, and the maximum œâ to resolve. For the time step, twice the value used for the Langevin integrator is usually a good choice.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"sf = DynamicStructureFactor(sys_large; Œît=2Œît, nœâ=120, œâmax=7.5);","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"sf currently contains dynamical structure data generated from a single sample. Additional samples can be added by generating a new spin configuration and calling add_sample!:","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"for _ in 1:2\n    for _ in 1:1000               # Fewer steps needed in equilibrium\n        step!(sys_large, langevin)\n    end\n    add_sample!(sf, sys_large)    # Accumulate the sample into `sf`\nend","category":"page"},{"location":"examples/fei2_tutorial/#Accessing-structure-factor-data","page":"Case Study: FeI_2","title":"Accessing structure factor data","text":"","category":"section"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"The basic function for accessing intensity data is intensities, which, in addition to the structure factor data itself, takes a list of wave vectors and a mode parameter. The options for the mode parameter are :trace, :perp and :full which return, respectively, the trace, the unpolarized intensity, and the full set of matrix elements (correlations of spin components) at the specified wave vectors. An optional keyword argument kT enables a classical-to-quantum rescaling.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Below, we plot two single-q slices.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"qs = [[0, 0, 0], [0.5, 0.5, 0.5]]\nis = intensities(sf, qs, :trace; kT)\n\nfig = Figure()\nax = Axis(fig[1,1]; xlabel=\"meV\", ylabel=\"Intensity\")\nl1 = lines!(ax, œâs(sf), is[1,:])\nl2 = lines!(ax, œâs(sf), is[2,:])\nLegend(fig[1,2], [l1, l2], [\"(0,0,0)\", \"(œÄ,œÄ,œÄ)\"])\nfig","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Figure()","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Frequently one wants to extract energy intensities along lines that connect special wave vectors. The function connected_path linearly samples between provided q-points, with a given sample density.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"points = [[0,   0, 0],  # List of wave vectors that define a path\n          [1,   0, 0],\n          [0,   1, 0],\n          [1/2, 0, 0],\n          [0,   1, 0],\n          [0,   0, 0]]\ndensity = 40\npath, markers = connected_path(points, density);","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Calculate and plot the intensities along this path using FormFactor corrections appropriate for Fe2 magnetic ions.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"formfactors = [FormFactor(1, \"Fe2\"; g_lande=3/2)]\n\nis = intensities(sf, path, :perp;\n    interpolation = :linear,       # Interpolate between available wave vectors\n    kT,                            # Temperature for intensity correction\n    formfactors,                   # Form factor information\n)\nis = broaden_energy(sf, is, (œâ, œâ‚ÇÄ)->lorentzian(œâ-œâ‚ÇÄ, 0.06))  # Add artificial broadening\n\nfig = Figure()\nlabels = [\"($(p[1]),$(p[2]),$(p[3]))\" for p in points]\nax = Axis(fig[1,1];\n    ylabel = \"meV\",\n    xticks = (markers, labels),\n    xticklabelrotation=œÄ/8,\n    xticklabelsize=12,\n)\nheatmap!(ax, 1:size(is,1), œâs(sf), is; colorrange=(0.0, 2.5))\nfig","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Figure()","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"The existence of a lower-energy, single-ion bound state is in qualitative agreement with the experimental data in Bai et al. (Note that the publication figure uses a different coordinate system to label the same wave vectors.)","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"<img src=\"https://raw.githubusercontent.com/SunnySuite/Sunny.jl/main/docs/src/assets/FeI2_intensity.jpg\">","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Often it is useful to plot cuts across multiple wave vectors but at a single energy.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"npoints = 60\nqvals = range(-2, 2, length=npoints)\nqs = [[a, b, 0] for a in qvals, b in qvals]\n\nis = intensities(sf, qs, :perp;\n    interpolation = :linear,\n    kT,\n    formfactors,\n);\n\nœâidx = 30\nœâ = œâs(sf)[œâidx]\nfig = Figure()\nax = Axis(fig[1,1]; title=\"œâ=$œâ meV\", aspect=true)\nhidedecorations!(ax); hidespines!(ax)\nhm = heatmap!(ax, is[:,:,œâidx])\nColorbar(fig[1,2], hm)\nfig","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Figure()","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Note that Brillouin zones appear 'skewed'. This is a consequence of the fact that Sunny measures q-vectors as multiples of reciprocal lattice vectors, and the latter are not orthogonal. It is often useful to express our wave vectors in terms of an orthogonal basis, where each basis element is specified as a linear combination of reciprocal lattice vectors. For our crystal, with reciprocal vectors a^*, b^* and c^*, we can define an orthogonal basis by taking hata^* = 05(a^* + b^*), hatb^*=a^* - b^*, and hatc^*=c^*. Below, we map qs to wavevectors ks in the new coordinate system and get their intensities.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"A = [0.5  1  0;\n     0.5 -1  0;\n     0    0  1]\nks = [A*q for q in qs]\n\nis_ortho = intensities(sf, ks, :perp;\n    interpolation = :linear,\n    kT,\n    formfactors,\n)\n\nfig = Figure()\nax = Axis(fig[1,1]; title=\"œâ=$œâ meV\", aspect=true)\nhidedecorations!(ax); hidespines!(ax)\nhm = heatmap!(ax, is_ortho[:,:,œâidx])\nColorbar(fig[1,2], hm)\nfig","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Figure()","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Finally, we note that instantaneous structure factor data, ùíÆ(ùê™), can be obtained from a dynamic structure factor with instant_intensities.","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"is_static = instant_intensities(sf, ks, :perp;\n    interpolation = :linear,\n    kT,\n    formfactors,\n)\n\nfig = Figure()\nax = Axis(fig[1,1]; title=\"Instantaneous Structure Factor\", aspect=true)\nhidedecorations!(ax); hidespines!(ax)\nhm = heatmap!(ax, is_static)\nColorbar(fig[1,2], hm)\nfig","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"Figure()","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"","category":"page"},{"location":"examples/fei2_tutorial/","page":"Case Study: FeI_2","title":"Case Study: FeI_2","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#Sunny.jl","page":"Overview","title":"Sunny.jl","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"Sunny is a package for simulating classical spin systems, including the Landau-Lifshitz dynamics of spin dipoles and its generalization to multipolar spin components. The latter is especially powerful for modeling magnetic compounds with strong single-ion anisotropy interactions.","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"Sunny provides the following features:","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"Generalized spin dynamics using SU(N) coherent states.\nAbility specify a crystal by a .cif file, or using its spacegroup symmetry.\nSymmetry analysis to classify allowed interaction terms, and to propagate them by symmetry.\nSingle-ion anisotropy at arbitrary order, which can be specified using Stevens operators or as a polynomial of spin operators.\nMonte Carlo sampling of spin configurations in thermal equilibrium.\nEwald summation for long-range dipole-dipole interactions, accelerated with the fast Fourier transform (FFT).\nEstimation of the mathcalS(mathbfq omega) dynamical structure factor data, with options for various corrections (form factor, classical-to-quantum factors, ...)","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"Work in progress includes:","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"Linear spin wave theory and its generalization to SU(N) coherent states.\nInteractive visualizations of the 3D crystals and structure factor data.\nMPI-distributed Monte Carlo sampling, including parallel tempering.","category":"page"},{"location":"quick-start/#Install-Julia-and-Sunny","page":"Quick Start","title":"Install Julia and Sunny","text":"","category":"section"},{"location":"quick-start/","page":"Quick Start","title":"Quick Start","text":"Download Julia 1.8 or later. Run the Julia executable, which should open a terminal with the prompt: julia>. Load Sunny with the command:","category":"page"},{"location":"quick-start/","page":"Quick Start","title":"Quick Start","text":"using Sunny","category":"page"},{"location":"quick-start/","page":"Quick Start","title":"Quick Start","text":"If Sunny has not yet been installed, Julia will ask your permission to download and install it within the Julia environment.","category":"page"},{"location":"quick-start/","page":"Quick Start","title":"Quick Start","text":"To learn more about Julia, read our Getting Started with Julia wiki page.","category":"page"},{"location":"quick-start/","page":"Quick Start","title":"Quick Start","text":"For an interactive, notebook-like experience, we recommend the Julia extension for VSCode. Alternatively, the IJulia package provides Julia-enabled Jupyter notebooks.","category":"page"},{"location":"quick-start/#Example-usage","page":"Quick Start","title":"Example usage","text":"","category":"section"},{"location":"quick-start/","page":"Quick Start","title":"Quick Start","text":"At the Julia prompt, create a diamond cubic crystal using the Crystal constructor:","category":"page"},{"location":"quick-start/","page":"Quick Start","title":"Quick Start","text":"crystal = Crystal(lattice_vectors(1, 1, 1, 90, 90, 90), [[0,0,0]], 227; setting=\"1\")","category":"page"},{"location":"quick-start/","page":"Quick Start","title":"Quick Start","text":"The first argument defines a unit cell via the convenience function lattice_vectors. The second argument is a list of basis atom positions. The third, optional argument specifies an international spacegroup number (if it's missing, Sunny will infer a spacegroup). Arguments appearing after the semicolon ; are named. Here, we are selecting the first (out of two) setting conventions for spacegroup 227.","category":"page"},{"location":"quick-start/","page":"Quick Start","title":"Quick Start","text":"Sunny outputs:","category":"page"},{"location":"quick-start/","page":"Quick Start","title":"Quick Start","text":"Crystal\nHM symbol 'F d -3 m' (227)\nLattice params a=1, b=1, c=1, Œ±=90¬∞, Œ≤=90¬∞, Œ≥=90¬∞\nCell volume 1\nWyckoff 8a (point group '-43m'):\n   1. [0, 0, 0]\n   2. [0.5, 0.5, 0]\n   3. [0.25, 0.25, 0.25]\n   4. [0.75, 0.75, 0.25]\n   5. [0.5, 0, 0.5]\n   6. [0, 0.5, 0.5]\n   7. [0.75, 0.25, 0.75]\n   8. [0.25, 0.75, 0.75]","category":"page"},{"location":"quick-start/","page":"Quick Start","title":"Quick Start","text":"Observe that Sunny filled all eight symmetry-equivalent atom positions for the diamond cubic unit cell. The coordinates are measured in units of the lattice vectors.","category":"page"},{"location":"quick-start/","page":"Quick Start","title":"Quick Start","text":"Alternatively, Sunny can read the crystal structure from a .cif file. Or, if a complete list of atoms is provided, Sunny can infer the spacegroup symmetry using spglib.","category":"page"},{"location":"quick-start/","page":"Quick Start","title":"Quick Start","text":"The crystal object can be used as an argument to other Sunny functions. For example, print_symmetry_table lists all symmetry-allowed exchange interactions up to a maximum distance,","category":"page"},{"location":"quick-start/","page":"Quick Start","title":"Quick Start","text":"print_symmetry_table(crystal, 0.8)","category":"page"},{"location":"quick-start/","page":"Quick Start","title":"Quick Start","text":"which prints,","category":"page"},{"location":"quick-start/","page":"Quick Start","title":"Quick Start","text":"Atom 1\nPosition [0, 0, 0], multiplicity 8\nAllowed g-tensor: | A  0  0 |\n                  | 0  A  0 |\n                  | 0  0  A |\nAllowed anisotropy in Stevens operators ùí™[k,q]:\n    c‚ÇÅ*(ùí™[4,0]+5ùí™[4,4]) +\n    c‚ÇÇ*(ùí™[6,0]-21ùí™[6,4])\n\nBond(1, 3, [0, 0, 0])\nDistance 0.433, coordination 4\nConnects [0, 0, 0] to [0.25, 0.25, 0.25]\nAllowed exchange matrix: | A  B  B |\n                         | B  A  B |\n                         | B  B  A |\n\nBond(1, 2, [0, 0, 0])\nDistance 0.7071, coordination 12\nConnects [0, 0, 0] to [0.5, 0.5, 0]\nAllowed exchange matrix: | A  C -D |\n                         | C  A -D |\n                         | D  D  B |\nAllowed DM vector: [-D D 0]","category":"page"},{"location":"quick-start/","page":"Quick Start","title":"Quick Start","text":"Sunny reported that a single-ion anisotropy is only allowed at quartic and hexic orders, which is consistent with the cubic point group symmetry. Additionally, Sunny reported the allowed forms of nearest and next-nearest neighbor interaction.","category":"page"},{"location":"quick-start/","page":"Quick Start","title":"Quick Start","text":"The next steps are typically the following","category":"page"},{"location":"quick-start/","page":"Quick Start","title":"Quick Start","text":"Build a System which contains spins on a finite size lattice of crystal unit cells.\nAdd interactions to the system using functions like set_external_field!, set_exchange!, and set_anisotropy!.\nPerform Monte Carlo simulation to equilibrate the spin configuration. Options include the continuous Langevin dynamics, or single-spin flip updates with LocalSampler. The former can efficiently handle long-range dipole-dipole interactions, while the latter may be better in the presence of strong anisotropy (e.g., the Ising limit).\nMeasure the static or dynamical structure factor. For details, see the page Structure Factor Calculations.","category":"page"},{"location":"examples/ising2d/","page":"Classical Ising model","title":"Classical Ising model","text":"EditURL = \"https://github.com/SunnySuite/Sunny.jl/blob/main/examples/ising2d.jl\"","category":"page"},{"location":"examples/ising2d/#Classical-Ising-model","page":"Classical Ising model","title":"Classical Ising model","text":"","category":"section"},{"location":"examples/ising2d/","page":"Classical Ising model","title":"Classical Ising model","text":"This tutorial illustrates simulation of the classical 2D Ising model.","category":"page"},{"location":"examples/ising2d/","page":"Classical Ising model","title":"Classical Ising model","text":"using Sunny, Plots","category":"page"},{"location":"examples/ising2d/","page":"Classical Ising model","title":"Classical Ising model","text":"Sunny expects a 3D Crystal unit cell. To model a square lattice, we create an orthogonal unit cell where the z-spacing is distinct from the x and y spacing.","category":"page"},{"location":"examples/ising2d/","page":"Classical Ising model","title":"Classical Ising model","text":"a = 1\nlatvecs = lattice_vectors(a,a,10a,90,90,90)\ncrystal = Crystal(latvecs, [[0,0,0]])","category":"page"},{"location":"examples/ising2d/","page":"Classical Ising model","title":"Classical Ising model","text":"Crystal\nHM symbol 'P 4/m m m' (123)\nLattice params a=1, b=1, c=10, Œ±=90¬∞, Œ≤=90¬∞, Œ≥=90¬∞\nCell volume 10\nWyckoff 1a (point group '4/mmm'):\n   1. [0, 0, 0]\n","category":"page"},{"location":"examples/ising2d/","page":"Classical Ising model","title":"Classical Ising model","text":"Create a System of spins with linear size L in the x and y directions, and only one layer in the z direction. The option :dipole means that the system will store Heisenberg spins, as opposed to SU(N) coherent states. Polarize the initial spin configuration using polarize_spins!. Following the Ising convention, we will restrict these spins to the z-axis and give them magnitude S=1.","category":"page"},{"location":"examples/ising2d/","page":"Classical Ising model","title":"Classical Ising model","text":"By default, Sunny uses physical units, e.g. magnetic field in tesla. Here we specify an alternative Units system, so that the Zeeman coupling between the spin dipole ùê¨ and an external field ùêÅ has the dimensionless form -ùêÅùê¨.","category":"page"},{"location":"examples/ising2d/","page":"Classical Ising model","title":"Classical Ising model","text":"L = 128\nsys = System(crystal, (L,L,1), [SpinInfo(1, S=1, g=1)], :dipole, units=Units.theory, seed=0)\npolarize_spins!(sys, (0,0,1))","category":"page"},{"location":"examples/ising2d/","page":"Classical Ising model","title":"Classical Ising model","text":"Use set_exchange! to include a ferromagnetic Heisenberg interaction along nearest-neighbor bonds. The Bond below connects two spins displaced by one lattice constant in the x-direction. This interaction will be propagated to all nearest-neighbors bonds in the system, consistent with the symmetries of the square lattice.","category":"page"},{"location":"examples/ising2d/","page":"Classical Ising model","title":"Classical Ising model","text":"set_exchange!(sys, -1.0, Bond(1,1,(1,0,0)))","category":"page"},{"location":"examples/ising2d/","page":"Classical Ising model","title":"Classical Ising model","text":"If an external field is desired, it can be set using set_external_field!.","category":"page"},{"location":"examples/ising2d/","page":"Classical Ising model","title":"Classical Ising model","text":"B = 0\nset_external_field!(sys, (0,0,B))","category":"page"},{"location":"examples/ising2d/","page":"Classical Ising model","title":"Classical Ising model","text":"The critical temperature for the Ising model is known analytically.","category":"page"},{"location":"examples/ising2d/","page":"Classical Ising model","title":"Classical Ising model","text":"Tc = 2/log(1+‚àö2)","category":"page"},{"location":"examples/ising2d/","page":"Classical Ising model","title":"Classical Ising model","text":"2.269185314213022","category":"page"},{"location":"examples/ising2d/","page":"Classical Ising model","title":"Classical Ising model","text":"Use a LocalSampler to perform nsweeps Monte Carlo sweeps. A sweep consists of, on average, one trial update per spin in the system. Each proposed update is accepted or rejected according to the Metropolis acceptance probability. As its name suggests, the propose_flip function will only propose pure spin flips, ùê¨ rightarrow -ùê¨.","category":"page"},{"location":"examples/ising2d/","page":"Classical Ising model","title":"Classical Ising model","text":"nsweeps = 4000\nsampler = LocalSampler(kT=Tc, propose=propose_flip)\nfor i in 1:nsweeps\n    step!(sys, sampler)\nend","category":"page"},{"location":"examples/ising2d/","page":"Classical Ising model","title":"Classical Ising model","text":"Plot the Ising spins by extracting the z-component of the dipoles","category":"page"},{"location":"examples/ising2d/","page":"Classical Ising model","title":"Classical Ising model","text":"heatmap(reshape([s.z for s in sys.dipoles], (L,L)))","category":"page"},{"location":"examples/ising2d/","page":"Classical Ising model","title":"Classical Ising model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip360\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip360)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip361\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip360)\" d=\"M169.121 1486.45 L2112.76 1486.45 L2112.76 47.2441 L169.121 47.2441  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip362\">\n    <rect x=\"169\" y=\"47\" width=\"1945\" height=\"1440\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip362)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"541.145,1486.45 541.145,47.2441 \"/>\n<polyline clip-path=\"url(#clip362)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"920.761,1486.45 920.761,47.2441 \"/>\n<polyline clip-path=\"url(#clip362)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1300.38,1486.45 1300.38,47.2441 \"/>\n<polyline clip-path=\"url(#clip362)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1679.99,1486.45 1679.99,47.2441 \"/>\n<polyline clip-path=\"url(#clip362)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2059.61,1486.45 2059.61,47.2441 \"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"169.121,1486.45 2112.76,1486.45 \"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"541.145,1486.45 541.145,1467.55 \"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"920.761,1486.45 920.761,1467.55 \"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1300.38,1486.45 1300.38,1467.55 \"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1679.99,1486.45 1679.99,1467.55 \"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2059.61,1486.45 2059.61,1467.55 \"/>\n<path clip-path=\"url(#clip360)\" d=\"M520.416 1544.91 L536.735 1544.91 L536.735 1548.85 L514.791 1548.85 L514.791 1544.91 Q517.453 1542.16 522.036 1537.53 Q526.643 1532.88 527.823 1531.53 Q530.069 1529.01 530.948 1527.27 Q531.851 1525.51 531.851 1523.82 Q531.851 1521.07 529.907 1519.33 Q527.985 1517.6 524.884 1517.6 Q522.685 1517.6 520.231 1518.36 Q517.8 1519.13 515.023 1520.68 L515.023 1515.95 Q517.847 1514.82 520.3 1514.24 Q522.754 1513.66 524.791 1513.66 Q530.161 1513.66 533.356 1516.35 Q536.55 1519.03 536.55 1523.52 Q536.55 1525.65 535.74 1527.57 Q534.953 1529.47 532.847 1532.07 Q532.268 1532.74 529.166 1535.95 Q526.064 1539.15 520.416 1544.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M546.596 1514.29 L564.953 1514.29 L564.953 1518.22 L550.879 1518.22 L550.879 1526.7 Q551.897 1526.35 552.916 1526.19 Q553.934 1526 554.953 1526 Q560.74 1526 564.12 1529.17 Q567.499 1532.34 567.499 1537.76 Q567.499 1543.34 564.027 1546.44 Q560.555 1549.52 554.235 1549.52 Q552.059 1549.52 549.791 1549.15 Q547.546 1548.78 545.138 1548.04 L545.138 1543.34 Q547.221 1544.47 549.444 1545.03 Q551.666 1545.58 554.143 1545.58 Q558.147 1545.58 560.485 1543.48 Q562.823 1541.37 562.823 1537.76 Q562.823 1534.15 560.485 1532.04 Q558.147 1529.94 554.143 1529.94 Q552.268 1529.94 550.393 1530.35 Q548.541 1530.77 546.596 1531.65 L546.596 1514.29 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M895.46 1514.29 L913.817 1514.29 L913.817 1518.22 L899.743 1518.22 L899.743 1526.7 Q900.761 1526.35 901.78 1526.19 Q902.798 1526 903.817 1526 Q909.604 1526 912.984 1529.17 Q916.363 1532.34 916.363 1537.76 Q916.363 1543.34 912.891 1546.44 Q909.419 1549.52 903.099 1549.52 Q900.923 1549.52 898.655 1549.15 Q896.41 1548.78 894.002 1548.04 L894.002 1543.34 Q896.085 1544.47 898.308 1545.03 Q900.53 1545.58 903.007 1545.58 Q907.011 1545.58 909.349 1543.48 Q911.687 1541.37 911.687 1537.76 Q911.687 1534.15 909.349 1532.04 Q907.011 1529.94 903.007 1529.94 Q901.132 1529.94 899.257 1530.35 Q897.405 1530.77 895.46 1531.65 L895.46 1514.29 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M935.576 1517.37 Q931.965 1517.37 930.136 1520.93 Q928.331 1524.47 928.331 1531.6 Q928.331 1538.71 930.136 1542.27 Q931.965 1545.82 935.576 1545.82 Q939.21 1545.82 941.016 1542.27 Q942.844 1538.71 942.844 1531.6 Q942.844 1524.47 941.016 1520.93 Q939.21 1517.37 935.576 1517.37 M935.576 1513.66 Q941.386 1513.66 944.442 1518.27 Q947.52 1522.85 947.52 1531.6 Q947.52 1540.33 944.442 1544.94 Q941.386 1549.52 935.576 1549.52 Q929.766 1549.52 926.687 1544.94 Q923.632 1540.33 923.632 1531.6 Q923.632 1522.85 926.687 1518.27 Q929.766 1513.66 935.576 1513.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1274.23 1514.29 L1296.45 1514.29 L1296.45 1516.28 L1283.91 1548.85 L1279.02 1548.85 L1290.83 1518.22 L1274.23 1518.22 L1274.23 1514.29 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1305.62 1514.29 L1323.98 1514.29 L1323.98 1518.22 L1309.9 1518.22 L1309.9 1526.7 Q1310.92 1526.35 1311.94 1526.19 Q1312.96 1526 1313.98 1526 Q1319.76 1526 1323.14 1529.17 Q1326.52 1532.34 1326.52 1537.76 Q1326.52 1543.34 1323.05 1546.44 Q1319.58 1549.52 1313.26 1549.52 Q1311.08 1549.52 1308.81 1549.15 Q1306.57 1548.78 1304.16 1548.04 L1304.16 1543.34 Q1306.25 1544.47 1308.47 1545.03 Q1310.69 1545.58 1313.17 1545.58 Q1317.17 1545.58 1319.51 1543.48 Q1321.85 1541.37 1321.85 1537.76 Q1321.85 1534.15 1319.51 1532.04 Q1317.17 1529.94 1313.17 1529.94 Q1311.29 1529.94 1309.42 1530.35 Q1307.56 1530.77 1305.62 1531.65 L1305.62 1514.29 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1639.6 1544.91 L1647.24 1544.91 L1647.24 1518.55 L1638.93 1520.21 L1638.93 1515.95 L1647.19 1514.29 L1651.87 1514.29 L1651.87 1544.91 L1659.51 1544.91 L1659.51 1548.85 L1639.6 1548.85 L1639.6 1544.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1678.95 1517.37 Q1675.34 1517.37 1673.51 1520.93 Q1671.71 1524.47 1671.71 1531.6 Q1671.71 1538.71 1673.51 1542.27 Q1675.34 1545.82 1678.95 1545.82 Q1682.59 1545.82 1684.39 1542.27 Q1686.22 1538.71 1686.22 1531.6 Q1686.22 1524.47 1684.39 1520.93 Q1682.59 1517.37 1678.95 1517.37 M1678.95 1513.66 Q1684.76 1513.66 1687.82 1518.27 Q1690.9 1522.85 1690.9 1531.6 Q1690.9 1540.33 1687.82 1544.94 Q1684.76 1549.52 1678.95 1549.52 Q1673.14 1549.52 1670.06 1544.94 Q1667.01 1540.33 1667.01 1531.6 Q1667.01 1522.85 1670.06 1518.27 Q1673.14 1513.66 1678.95 1513.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1709.11 1517.37 Q1705.5 1517.37 1703.67 1520.93 Q1701.87 1524.47 1701.87 1531.6 Q1701.87 1538.71 1703.67 1542.27 Q1705.5 1545.82 1709.11 1545.82 Q1712.75 1545.82 1714.55 1542.27 Q1716.38 1538.71 1716.38 1531.6 Q1716.38 1524.47 1714.55 1520.93 Q1712.75 1517.37 1709.11 1517.37 M1709.11 1513.66 Q1714.92 1513.66 1717.98 1518.27 Q1721.06 1522.85 1721.06 1531.6 Q1721.06 1540.33 1717.98 1544.94 Q1714.92 1549.52 1709.11 1549.52 Q1703.3 1549.52 1700.22 1544.94 Q1697.17 1540.33 1697.17 1531.6 Q1697.17 1522.85 1700.22 1518.27 Q1703.3 1513.66 1709.11 1513.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2019.71 1544.91 L2027.35 1544.91 L2027.35 1518.55 L2019.04 1520.21 L2019.04 1515.95 L2027.31 1514.29 L2031.98 1514.29 L2031.98 1544.91 L2039.62 1544.91 L2039.62 1548.85 L2019.71 1548.85 L2019.71 1544.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2053.09 1544.91 L2069.41 1544.91 L2069.41 1548.85 L2047.47 1548.85 L2047.47 1544.91 Q2050.13 1542.16 2054.71 1537.53 Q2059.32 1532.88 2060.5 1531.53 Q2062.75 1529.01 2063.63 1527.27 Q2064.53 1525.51 2064.53 1523.82 Q2064.53 1521.07 2062.58 1519.33 Q2060.66 1517.6 2057.56 1517.6 Q2055.36 1517.6 2052.91 1518.36 Q2050.48 1519.13 2047.7 1520.68 L2047.7 1515.95 Q2050.52 1514.82 2052.98 1514.24 Q2055.43 1513.66 2057.47 1513.66 Q2062.84 1513.66 2066.03 1516.35 Q2069.23 1519.03 2069.23 1523.52 Q2069.23 1525.65 2068.42 1527.57 Q2067.63 1529.47 2065.52 1532.07 Q2064.95 1532.74 2061.84 1535.95 Q2058.74 1539.15 2053.09 1544.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2079.27 1514.29 L2097.63 1514.29 L2097.63 1518.22 L2083.56 1518.22 L2083.56 1526.7 Q2084.57 1526.35 2085.59 1526.19 Q2086.61 1526 2087.63 1526 Q2093.42 1526 2096.8 1529.17 Q2100.18 1532.34 2100.18 1537.76 Q2100.18 1543.34 2096.7 1546.44 Q2093.23 1549.52 2086.91 1549.52 Q2084.74 1549.52 2082.47 1549.15 Q2080.22 1548.78 2077.82 1548.04 L2077.82 1543.34 Q2079.9 1544.47 2082.12 1545.03 Q2084.34 1545.58 2086.82 1545.58 Q2090.82 1545.58 2093.16 1543.48 Q2095.5 1541.37 2095.5 1537.76 Q2095.5 1534.15 2093.16 1532.04 Q2090.82 1529.94 2086.82 1529.94 Q2084.95 1529.94 2083.07 1530.35 Q2081.22 1530.77 2079.27 1531.65 L2079.27 1514.29 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip362)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"169.121,1210.98 2112.76,1210.98 \"/>\n<polyline clip-path=\"url(#clip362)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"169.121,929.881 2112.76,929.881 \"/>\n<polyline clip-path=\"url(#clip362)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"169.121,648.786 2112.76,648.786 \"/>\n<polyline clip-path=\"url(#clip362)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"169.121,367.692 2112.76,367.692 \"/>\n<polyline clip-path=\"url(#clip362)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"169.121,86.5973 2112.76,86.5973 \"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"169.121,1486.45 169.121,47.2441 \"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"169.121,1210.98 185.942,1210.98 \"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"169.121,929.881 185.942,929.881 \"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"169.121,648.786 185.942,648.786 \"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"169.121,367.692 185.942,367.692 \"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"169.121,86.5973 185.942,86.5973 \"/>\n<path clip-path=\"url(#clip360)\" d=\"M86.0382 1224.32 L102.358 1224.32 L102.358 1228.26 L80.4133 1228.26 L80.4133 1224.32 Q83.0753 1221.57 87.6586 1216.94 Q92.2651 1212.28 93.4456 1210.94 Q95.691 1208.42 96.5706 1206.68 Q97.4734 1204.92 97.4734 1203.23 Q97.4734 1200.48 95.5289 1198.74 Q93.6076 1197.01 90.5058 1197.01 Q88.3067 1197.01 85.8531 1197.77 Q83.4225 1198.53 80.6447 1200.08 L80.6447 1195.36 Q83.4688 1194.23 85.9225 1193.65 Q88.3762 1193.07 90.4132 1193.07 Q95.7836 1193.07 98.978 1195.76 Q102.172 1198.44 102.172 1202.93 Q102.172 1205.06 101.362 1206.98 Q100.575 1208.88 98.4687 1211.47 Q97.89 1212.14 94.7882 1215.36 Q91.6864 1218.56 86.0382 1224.32 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M112.219 1193.7 L130.575 1193.7 L130.575 1197.63 L116.501 1197.63 L116.501 1206.1 Q117.52 1205.76 118.538 1205.59 Q119.557 1205.41 120.575 1205.41 Q126.362 1205.41 129.742 1208.58 Q133.121 1211.75 133.121 1217.17 Q133.121 1222.75 129.649 1225.85 Q126.177 1228.93 119.857 1228.93 Q117.682 1228.93 115.413 1228.56 Q113.168 1228.19 110.76 1227.45 L110.76 1222.75 Q112.844 1223.88 115.066 1224.44 Q117.288 1224.99 119.765 1224.99 Q123.77 1224.99 126.107 1222.88 Q128.445 1220.78 128.445 1217.17 Q128.445 1213.56 126.107 1211.45 Q123.77 1209.34 119.765 1209.34 Q117.89 1209.34 116.015 1209.76 Q114.163 1210.18 112.219 1211.06 L112.219 1193.7 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M81.0614 912.601 L99.4178 912.601 L99.4178 916.536 L85.3438 916.536 L85.3438 925.008 Q86.3623 924.661 87.3808 924.499 Q88.3993 924.314 89.4178 924.314 Q95.2049 924.314 98.5845 927.485 Q101.964 930.656 101.964 936.073 Q101.964 941.652 98.4919 944.753 Q95.0197 947.832 88.7003 947.832 Q86.5243 947.832 84.2558 947.462 Q82.0105 947.091 79.6031 946.351 L79.6031 941.652 Q81.6864 942.786 83.9086 943.341 Q86.1308 943.897 88.6077 943.897 Q92.6123 943.897 94.9502 941.79 Q97.2882 939.684 97.2882 936.073 Q97.2882 932.462 94.9502 930.355 Q92.6123 928.249 88.6077 928.249 Q86.7327 928.249 84.8577 928.666 Q83.0058 929.082 81.0614 929.962 L81.0614 912.601 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M121.177 915.679 Q117.566 915.679 115.737 919.244 Q113.932 922.786 113.932 929.916 Q113.932 937.022 115.737 940.587 Q117.566 944.128 121.177 944.128 Q124.811 944.128 126.617 940.587 Q128.445 937.022 128.445 929.916 Q128.445 922.786 126.617 919.244 Q124.811 915.679 121.177 915.679 M121.177 911.976 Q126.987 911.976 130.043 916.582 Q133.121 921.166 133.121 929.916 Q133.121 938.642 130.043 943.249 Q126.987 947.832 121.177 947.832 Q115.367 947.832 112.288 943.249 Q109.233 938.642 109.233 929.916 Q109.233 921.166 112.288 916.582 Q115.367 911.976 121.177 911.976 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M80.8299 631.506 L103.052 631.506 L103.052 633.497 L90.5058 666.066 L85.6216 666.066 L97.4271 635.441 L80.8299 635.441 L80.8299 631.506 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M112.219 631.506 L130.575 631.506 L130.575 635.441 L116.501 635.441 L116.501 643.914 Q117.52 643.566 118.538 643.404 Q119.557 643.219 120.575 643.219 Q126.362 643.219 129.742 646.39 Q133.121 649.562 133.121 654.978 Q133.121 660.557 129.649 663.659 Q126.177 666.738 119.857 666.738 Q117.682 666.738 115.413 666.367 Q113.168 665.997 110.76 665.256 L110.76 660.557 Q112.844 661.691 115.066 662.247 Q117.288 662.802 119.765 662.802 Q123.77 662.802 126.107 660.696 Q128.445 658.589 128.445 654.978 Q128.445 651.367 126.107 649.261 Q123.77 647.154 119.765 647.154 Q117.89 647.154 116.015 647.571 Q114.163 647.988 112.219 648.867 L112.219 631.506 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M51.6634 381.037 L59.3023 381.037 L59.3023 354.671 L50.9921 356.338 L50.9921 352.078 L59.256 350.412 L63.9319 350.412 L63.9319 381.037 L71.5707 381.037 L71.5707 384.972 L51.6634 384.972 L51.6634 381.037 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M91.0151 353.49 Q87.404 353.49 85.5753 357.055 Q83.7697 360.597 83.7697 367.727 Q83.7697 374.833 85.5753 378.398 Q87.404 381.939 91.0151 381.939 Q94.6493 381.939 96.4548 378.398 Q98.2835 374.833 98.2835 367.727 Q98.2835 360.597 96.4548 357.055 Q94.6493 353.49 91.0151 353.49 M91.0151 349.787 Q96.8252 349.787 99.8808 354.393 Q102.959 358.977 102.959 367.727 Q102.959 376.453 99.8808 381.06 Q96.8252 385.643 91.0151 385.643 Q85.2049 385.643 82.1262 381.06 Q79.0707 376.453 79.0707 367.727 Q79.0707 358.977 82.1262 354.393 Q85.2049 349.787 91.0151 349.787 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M121.177 353.49 Q117.566 353.49 115.737 357.055 Q113.932 360.597 113.932 367.727 Q113.932 374.833 115.737 378.398 Q117.566 381.939 121.177 381.939 Q124.811 381.939 126.617 378.398 Q128.445 374.833 128.445 367.727 Q128.445 360.597 126.617 357.055 Q124.811 353.49 121.177 353.49 M121.177 349.787 Q126.987 349.787 130.043 354.393 Q133.121 358.977 133.121 367.727 Q133.121 376.453 130.043 381.06 Q126.987 385.643 121.177 385.643 Q115.367 385.643 112.288 381.06 Q109.233 376.453 109.233 367.727 Q109.233 358.977 112.288 354.393 Q115.367 349.787 121.177 349.787 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M52.6588 99.9422 L60.2976 99.9422 L60.2976 73.5766 L51.9875 75.2432 L51.9875 70.984 L60.2513 69.3173 L64.9272 69.3173 L64.9272 99.9422 L72.5661 99.9422 L72.5661 103.877 L52.6588 103.877 L52.6588 99.9422 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M86.0382 99.9422 L102.358 99.9422 L102.358 103.877 L80.4133 103.877 L80.4133 99.9422 Q83.0753 97.1875 87.6586 92.5579 Q92.2651 87.9052 93.4456 86.5626 Q95.691 84.0395 96.5706 82.3034 Q97.4734 80.5441 97.4734 78.8543 Q97.4734 76.0997 95.5289 74.3636 Q93.6076 72.6275 90.5058 72.6275 Q88.3067 72.6275 85.8531 73.3914 Q83.4225 74.1553 80.6447 75.7062 L80.6447 70.984 Q83.4688 69.8497 85.9225 69.271 Q88.3762 68.6923 90.4132 68.6923 Q95.7836 68.6923 98.978 71.3775 Q102.172 74.0627 102.172 78.5534 Q102.172 80.683 101.362 82.6043 Q100.575 84.5024 98.4687 87.095 Q97.89 87.7663 94.7882 90.9839 Q91.6864 94.1783 86.0382 99.9422 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M112.219 69.3173 L130.575 69.3173 L130.575 73.2525 L116.501 73.2525 L116.501 81.7247 Q117.52 81.3774 118.538 81.2154 Q119.557 81.0302 120.575 81.0302 Q126.362 81.0302 129.742 84.2015 Q133.121 87.3728 133.121 92.7894 Q133.121 98.3681 129.649 101.47 Q126.177 104.549 119.857 104.549 Q117.682 104.549 115.413 104.178 Q113.168 103.808 110.76 103.067 L110.76 98.3681 Q112.844 99.5023 115.066 100.058 Q117.288 100.613 119.765 100.613 Q123.77 100.613 126.107 98.507 Q128.445 96.4005 128.445 92.7894 Q128.445 89.1783 126.107 87.0719 Q123.77 84.9654 119.765 84.9654 Q117.89 84.9654 116.015 85.3821 Q114.163 85.7987 112.219 86.6783 L112.219 69.3173 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><g clip-path=\"url(#clip362)\">\n<image width=\"1944\" height=\"1439\" xlink:href=\"data:image/png;base64,\n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\nAAAAAEDkf9MJvWpNv8C1AAAAAElFTkSuQmCC\n\" transform=\"translate(169, 47)\"/>\n</g>\n<defs>\n  <clipPath id=\"clip363\">\n    <rect x=\"2160\" y=\"47\" width=\"73\" height=\"1440\"/>\n  </clipPath>\n</defs>\n<g clip-path=\"url(#clip363)\">\n<image width=\"72\" height=\"1439\" xlink:href=\"data:image/png;base64,\n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\nBYGCQOE/LrLuTX/wFc8AAAAASUVORK5CYII=\n\" transform=\"translate(2161, 47)\"/>\n</g>\n<path clip-path=\"url(#clip360)\" d=\"M2268.76 1483.27 L2298.43 1483.27 L2298.43 1487.21 L2268.76 1487.21 L2268.76 1483.27 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2309.33 1496.16 L2316.97 1496.16 L2316.97 1469.8 L2308.66 1471.46 L2308.66 1467.21 L2316.93 1465.54 L2321.6 1465.54 L2321.6 1496.16 L2329.24 1496.16 L2329.24 1500.1 L2309.33 1500.1 L2309.33 1496.16 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2338.69 1494.22 L2343.57 1494.22 L2343.57 1500.1 L2338.69 1500.1 L2338.69 1494.22 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2363.76 1468.62 Q2360.14 1468.62 2358.32 1472.18 Q2356.51 1475.72 2356.51 1482.85 Q2356.51 1489.96 2358.32 1493.53 Q2360.14 1497.07 2363.76 1497.07 Q2367.39 1497.07 2369.2 1493.53 Q2371.02 1489.96 2371.02 1482.85 Q2371.02 1475.72 2369.2 1472.18 Q2367.39 1468.62 2363.76 1468.62 M2363.76 1464.91 Q2369.57 1464.91 2372.62 1469.52 Q2375.7 1474.1 2375.7 1482.85 Q2375.7 1491.58 2372.62 1496.19 Q2369.57 1500.77 2363.76 1500.77 Q2357.95 1500.77 2354.87 1496.19 Q2351.81 1491.58 2351.81 1482.85 Q2351.81 1474.1 2354.87 1469.52 Q2357.95 1464.91 2363.76 1464.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2393.92 1468.62 Q2390.31 1468.62 2388.48 1472.18 Q2386.67 1475.72 2386.67 1482.85 Q2386.67 1489.96 2388.48 1493.53 Q2390.31 1497.07 2393.92 1497.07 Q2397.55 1497.07 2399.36 1493.53 Q2401.19 1489.96 2401.19 1482.85 Q2401.19 1475.72 2399.36 1472.18 Q2397.55 1468.62 2393.92 1468.62 M2393.92 1464.91 Q2399.73 1464.91 2402.78 1469.52 Q2405.86 1474.1 2405.86 1482.85 Q2405.86 1491.58 2402.78 1496.19 Q2399.73 1500.77 2393.92 1500.77 Q2388.11 1500.77 2385.03 1496.19 Q2381.97 1491.58 2381.97 1482.85 Q2381.97 1474.1 2385.03 1469.52 Q2388.11 1464.91 2393.92 1464.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2268.76 1303.37 L2298.43 1303.37 L2298.43 1307.31 L2268.76 1307.31 L2268.76 1303.37 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2318.52 1288.72 Q2314.91 1288.72 2313.08 1292.28 Q2311.28 1295.82 2311.28 1302.95 Q2311.28 1310.06 2313.08 1313.62 Q2314.91 1317.17 2318.52 1317.17 Q2322.16 1317.17 2323.96 1313.62 Q2325.79 1310.06 2325.79 1302.95 Q2325.79 1295.82 2323.96 1292.28 Q2322.16 1288.72 2318.52 1288.72 M2318.52 1285.01 Q2324.33 1285.01 2327.39 1289.62 Q2330.47 1294.2 2330.47 1302.95 Q2330.47 1311.68 2327.39 1316.29 Q2324.33 1320.87 2318.52 1320.87 Q2312.71 1320.87 2309.64 1316.29 Q2306.58 1311.68 2306.58 1302.95 Q2306.58 1294.2 2309.64 1289.62 Q2312.71 1285.01 2318.52 1285.01 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2338.69 1314.32 L2343.57 1314.32 L2343.57 1320.2 L2338.69 1320.2 L2338.69 1314.32 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2352.57 1285.64 L2374.8 1285.64 L2374.8 1287.63 L2362.25 1320.2 L2357.37 1320.2 L2369.17 1289.57 L2352.57 1289.57 L2352.57 1285.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2383.96 1285.64 L2402.32 1285.64 L2402.32 1289.57 L2388.25 1289.57 L2388.25 1298.05 Q2389.26 1297.7 2390.28 1297.54 Q2391.3 1297.35 2392.32 1297.35 Q2398.11 1297.35 2401.49 1300.52 Q2404.87 1303.69 2404.87 1309.11 Q2404.87 1314.69 2401.39 1317.79 Q2397.92 1320.87 2391.6 1320.87 Q2389.43 1320.87 2387.16 1320.5 Q2384.91 1320.13 2382.51 1319.39 L2382.51 1314.69 Q2384.59 1315.82 2386.81 1316.38 Q2389.03 1316.93 2391.51 1316.93 Q2395.51 1316.93 2397.85 1314.83 Q2400.19 1312.72 2400.19 1309.11 Q2400.19 1305.5 2397.85 1303.39 Q2395.51 1301.29 2391.51 1301.29 Q2389.63 1301.29 2387.76 1301.7 Q2385.91 1302.12 2383.96 1303 L2383.96 1285.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2268.76 1123.47 L2298.43 1123.47 L2298.43 1127.4 L2268.76 1127.4 L2268.76 1123.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2318.52 1108.82 Q2314.91 1108.82 2313.08 1112.38 Q2311.28 1115.92 2311.28 1123.05 Q2311.28 1130.16 2313.08 1133.72 Q2314.91 1137.27 2318.52 1137.27 Q2322.16 1137.27 2323.96 1133.72 Q2325.79 1130.16 2325.79 1123.05 Q2325.79 1115.92 2323.96 1112.38 Q2322.16 1108.82 2318.52 1108.82 M2318.52 1105.11 Q2324.33 1105.11 2327.39 1109.72 Q2330.47 1114.3 2330.47 1123.05 Q2330.47 1131.78 2327.39 1136.39 Q2324.33 1140.97 2318.52 1140.97 Q2312.71 1140.97 2309.64 1136.39 Q2306.58 1131.78 2306.58 1123.05 Q2306.58 1114.3 2309.64 1109.72 Q2312.71 1105.11 2318.52 1105.11 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2338.69 1134.42 L2343.57 1134.42 L2343.57 1140.3 L2338.69 1140.3 L2338.69 1134.42 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2353.8 1105.74 L2372.16 1105.74 L2372.16 1109.67 L2358.08 1109.67 L2358.08 1118.15 Q2359.1 1117.8 2360.12 1117.64 Q2361.14 1117.45 2362.16 1117.45 Q2367.95 1117.45 2371.32 1120.62 Q2374.7 1123.79 2374.7 1129.21 Q2374.7 1134.79 2371.23 1137.89 Q2367.76 1140.97 2361.44 1140.97 Q2359.26 1140.97 2357 1140.6 Q2354.75 1140.23 2352.34 1139.49 L2352.34 1134.79 Q2354.43 1135.92 2356.65 1136.48 Q2358.87 1137.03 2361.35 1137.03 Q2365.35 1137.03 2367.69 1134.93 Q2370.03 1132.82 2370.03 1129.21 Q2370.03 1125.6 2367.69 1123.49 Q2365.35 1121.39 2361.35 1121.39 Q2359.47 1121.39 2357.6 1121.8 Q2355.75 1122.22 2353.8 1123.1 L2353.8 1105.74 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2393.92 1108.82 Q2390.31 1108.82 2388.48 1112.38 Q2386.67 1115.92 2386.67 1123.05 Q2386.67 1130.16 2388.48 1133.72 Q2390.31 1137.27 2393.92 1137.27 Q2397.55 1137.27 2399.36 1133.72 Q2401.19 1130.16 2401.19 1123.05 Q2401.19 1115.92 2399.36 1112.38 Q2397.55 1108.82 2393.92 1108.82 M2393.92 1105.11 Q2399.73 1105.11 2402.78 1109.72 Q2405.86 1114.3 2405.86 1123.05 Q2405.86 1131.78 2402.78 1136.39 Q2399.73 1140.97 2393.92 1140.97 Q2388.11 1140.97 2385.03 1136.39 Q2381.97 1131.78 2381.97 1123.05 Q2381.97 1114.3 2385.03 1109.72 Q2388.11 1105.11 2393.92 1105.11 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2268.76 943.569 L2298.43 943.569 L2298.43 947.504 L2268.76 947.504 L2268.76 943.569 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2318.52 928.916 Q2314.91 928.916 2313.08 932.481 Q2311.28 936.023 2311.28 943.152 Q2311.28 950.259 2313.08 953.824 Q2314.91 957.365 2318.52 957.365 Q2322.16 957.365 2323.96 953.824 Q2325.79 950.259 2325.79 943.152 Q2325.79 936.023 2323.96 932.481 Q2322.16 928.916 2318.52 928.916 M2318.52 925.213 Q2324.33 925.213 2327.39 929.819 Q2330.47 934.402 2330.47 943.152 Q2330.47 951.879 2327.39 956.486 Q2324.33 961.069 2318.52 961.069 Q2312.71 961.069 2309.64 956.486 Q2306.58 951.879 2306.58 943.152 Q2306.58 934.402 2309.64 929.819 Q2312.71 925.213 2318.52 925.213 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2338.69 954.518 L2343.57 954.518 L2343.57 960.398 L2338.69 960.398 L2338.69 954.518 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2357.78 956.462 L2374.1 956.462 L2374.1 960.398 L2352.16 960.398 L2352.16 956.462 Q2354.82 953.708 2359.4 949.078 Q2364.01 944.426 2365.19 943.083 Q2367.44 940.56 2368.32 938.824 Q2369.22 937.064 2369.22 935.375 Q2369.22 932.62 2367.27 930.884 Q2365.35 929.148 2362.25 929.148 Q2360.05 929.148 2357.6 929.912 Q2355.17 930.676 2352.39 932.227 L2352.39 927.504 Q2355.21 926.37 2357.67 925.791 Q2360.12 925.213 2362.16 925.213 Q2367.53 925.213 2370.72 927.898 Q2373.92 930.583 2373.92 935.074 Q2373.92 937.203 2373.11 939.125 Q2372.32 941.023 2370.21 943.615 Q2369.63 944.287 2366.53 947.504 Q2363.43 950.699 2357.78 956.462 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2383.96 925.838 L2402.32 925.838 L2402.32 929.773 L2388.25 929.773 L2388.25 938.245 Q2389.26 937.898 2390.28 937.736 Q2391.3 937.551 2392.32 937.551 Q2398.11 937.551 2401.49 940.722 Q2404.87 943.893 2404.87 949.31 Q2404.87 954.888 2401.39 957.99 Q2397.92 961.069 2391.6 961.069 Q2389.43 961.069 2387.16 960.699 Q2384.91 960.328 2382.51 959.587 L2382.51 954.888 Q2384.59 956.023 2386.81 956.578 Q2389.03 957.134 2391.51 957.134 Q2395.51 957.134 2397.85 955.027 Q2400.19 952.921 2400.19 949.31 Q2400.19 945.699 2397.85 943.592 Q2395.51 941.486 2391.51 941.486 Q2389.63 941.486 2387.76 941.902 Q2385.91 942.319 2383.96 943.199 L2383.96 925.838 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2280.7 749.016 Q2277.09 749.016 2275.26 752.581 Q2273.45 756.122 2273.45 763.252 Q2273.45 770.358 2275.26 773.923 Q2277.09 777.465 2280.7 777.465 Q2284.33 777.465 2286.14 773.923 Q2287.97 770.358 2287.97 763.252 Q2287.97 756.122 2286.14 752.581 Q2284.33 749.016 2280.7 749.016 M2280.7 745.312 Q2286.51 745.312 2289.57 749.919 Q2292.64 754.502 2292.64 763.252 Q2292.64 771.979 2289.57 776.585 Q2286.51 781.168 2280.7 781.168 Q2274.89 781.168 2271.81 776.585 Q2268.76 771.979 2268.76 763.252 Q2268.76 754.502 2271.81 749.919 Q2274.89 745.312 2280.7 745.312 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2280.7 569.115 Q2277.09 569.115 2275.26 572.68 Q2273.45 576.222 2273.45 583.351 Q2273.45 590.458 2275.26 594.023 Q2277.09 597.564 2280.7 597.564 Q2284.33 597.564 2286.14 594.023 Q2287.97 590.458 2287.97 583.351 Q2287.97 576.222 2286.14 572.68 Q2284.33 569.115 2280.7 569.115 M2280.7 565.412 Q2286.51 565.412 2289.57 570.018 Q2292.64 574.601 2292.64 583.351 Q2292.64 592.078 2289.57 596.685 Q2286.51 601.268 2280.7 601.268 Q2274.89 601.268 2271.81 596.685 Q2268.76 592.078 2268.76 583.351 Q2268.76 574.601 2271.81 570.018 Q2274.89 565.412 2280.7 565.412 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2300.86 594.717 L2305.75 594.717 L2305.75 600.597 L2300.86 600.597 L2300.86 594.717 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2319.96 596.662 L2336.28 596.662 L2336.28 600.597 L2314.33 600.597 L2314.33 596.662 Q2317 593.907 2321.58 589.277 Q2326.19 584.625 2327.37 583.282 Q2329.61 580.759 2330.49 579.023 Q2331.39 577.264 2331.39 575.574 Q2331.39 572.819 2329.45 571.083 Q2327.53 569.347 2324.43 569.347 Q2322.23 569.347 2319.77 570.111 Q2317.34 570.875 2314.57 572.426 L2314.57 567.703 Q2317.39 566.569 2319.84 565.99 Q2322.3 565.412 2324.33 565.412 Q2329.7 565.412 2332.9 568.097 Q2336.09 570.782 2336.09 575.273 Q2336.09 577.402 2335.28 579.324 Q2334.5 581.222 2332.39 583.814 Q2331.81 584.486 2328.71 587.703 Q2325.61 590.898 2319.96 596.662 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2346.14 566.037 L2364.5 566.037 L2364.5 569.972 L2350.42 569.972 L2350.42 578.444 Q2351.44 578.097 2352.46 577.935 Q2353.48 577.75 2354.5 577.75 Q2360.28 577.75 2363.66 580.921 Q2367.04 584.092 2367.04 589.509 Q2367.04 595.087 2363.57 598.189 Q2360.1 601.268 2353.78 601.268 Q2351.6 601.268 2349.33 600.898 Q2347.09 600.527 2344.68 599.787 L2344.68 595.087 Q2346.76 596.222 2348.99 596.777 Q2351.21 597.333 2353.69 597.333 Q2357.69 597.333 2360.03 595.226 Q2362.37 593.12 2362.37 589.509 Q2362.37 585.898 2360.03 583.791 Q2357.69 581.685 2353.69 581.685 Q2351.81 581.685 2349.94 582.101 Q2348.08 582.518 2346.14 583.398 L2346.14 566.037 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2280.7 389.215 Q2277.09 389.215 2275.26 392.78 Q2273.45 396.321 2273.45 403.451 Q2273.45 410.557 2275.26 414.122 Q2277.09 417.664 2280.7 417.664 Q2284.33 417.664 2286.14 414.122 Q2287.97 410.557 2287.97 403.451 Q2287.97 396.321 2286.14 392.78 Q2284.33 389.215 2280.7 389.215 M2280.7 385.511 Q2286.51 385.511 2289.57 390.118 Q2292.64 394.701 2292.64 403.451 Q2292.64 412.178 2289.57 416.784 Q2286.51 421.368 2280.7 421.368 Q2274.89 421.368 2271.81 416.784 Q2268.76 412.178 2268.76 403.451 Q2268.76 394.701 2271.81 390.118 Q2274.89 385.511 2280.7 385.511 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2300.86 414.817 L2305.75 414.817 L2305.75 420.696 L2300.86 420.696 L2300.86 414.817 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2315.98 386.136 L2334.33 386.136 L2334.33 390.071 L2320.26 390.071 L2320.26 398.544 Q2321.28 398.196 2322.3 398.034 Q2323.32 397.849 2324.33 397.849 Q2330.12 397.849 2333.5 401.02 Q2336.88 404.192 2336.88 409.608 Q2336.88 415.187 2333.41 418.289 Q2329.94 421.368 2323.62 421.368 Q2321.44 421.368 2319.17 420.997 Q2316.93 420.627 2314.52 419.886 L2314.52 415.187 Q2316.6 416.321 2318.83 416.877 Q2321.05 417.432 2323.52 417.432 Q2327.53 417.432 2329.87 415.326 Q2332.2 413.219 2332.2 409.608 Q2332.2 405.997 2329.87 403.891 Q2327.53 401.784 2323.52 401.784 Q2321.65 401.784 2319.77 402.201 Q2317.92 402.618 2315.98 403.497 L2315.98 386.136 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2356.09 389.215 Q2352.48 389.215 2350.65 392.78 Q2348.85 396.321 2348.85 403.451 Q2348.85 410.557 2350.65 414.122 Q2352.48 417.664 2356.09 417.664 Q2359.73 417.664 2361.53 414.122 Q2363.36 410.557 2363.36 403.451 Q2363.36 396.321 2361.53 392.78 Q2359.73 389.215 2356.09 389.215 M2356.09 385.511 Q2361.9 385.511 2364.96 390.118 Q2368.04 394.701 2368.04 403.451 Q2368.04 412.178 2364.96 416.784 Q2361.9 421.368 2356.09 421.368 Q2350.28 421.368 2347.2 416.784 Q2344.15 412.178 2344.15 403.451 Q2344.15 394.701 2347.2 390.118 Q2350.28 385.511 2356.09 385.511 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2280.7 209.314 Q2277.09 209.314 2275.26 212.879 Q2273.45 216.421 2273.45 223.55 Q2273.45 230.657 2275.26 234.222 Q2277.09 237.763 2280.7 237.763 Q2284.33 237.763 2286.14 234.222 Q2287.97 230.657 2287.97 223.55 Q2287.97 216.421 2286.14 212.879 Q2284.33 209.314 2280.7 209.314 M2280.7 205.611 Q2286.51 205.611 2289.57 210.217 Q2292.64 214.801 2292.64 223.55 Q2292.64 232.277 2289.57 236.884 Q2286.51 241.467 2280.7 241.467 Q2274.89 241.467 2271.81 236.884 Q2268.76 232.277 2268.76 223.55 Q2268.76 214.801 2271.81 210.217 Q2274.89 205.611 2280.7 205.611 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2300.86 234.916 L2305.75 234.916 L2305.75 240.796 L2300.86 240.796 L2300.86 234.916 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2314.75 206.236 L2336.97 206.236 L2336.97 208.226 L2324.43 240.796 L2319.54 240.796 L2331.35 210.171 L2314.75 210.171 L2314.75 206.236 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2346.14 206.236 L2364.5 206.236 L2364.5 210.171 L2350.42 210.171 L2350.42 218.643 Q2351.44 218.296 2352.46 218.134 Q2353.48 217.949 2354.5 217.949 Q2360.28 217.949 2363.66 221.12 Q2367.04 224.291 2367.04 229.708 Q2367.04 235.287 2363.57 238.388 Q2360.1 241.467 2353.78 241.467 Q2351.6 241.467 2349.33 241.097 Q2347.09 240.726 2344.68 239.986 L2344.68 235.287 Q2346.76 236.421 2348.99 236.976 Q2351.21 237.532 2353.69 237.532 Q2357.69 237.532 2360.03 235.425 Q2362.37 233.319 2362.37 229.708 Q2362.37 226.097 2360.03 223.99 Q2357.69 221.884 2353.69 221.884 Q2351.81 221.884 2349.94 222.3 Q2348.08 222.717 2346.14 223.597 L2346.14 206.236 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2269.43 56.9601 L2277.07 56.9601 L2277.07 30.5945 L2268.76 32.2612 L2268.76 28.002 L2277.02 26.3353 L2281.7 26.3353 L2281.7 56.9601 L2289.33 56.9601 L2289.33 60.8953 L2269.43 60.8953 L2269.43 56.9601 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2298.78 55.0157 L2303.66 55.0157 L2303.66 60.8953 L2298.78 60.8953 L2298.78 55.0157 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2323.85 29.414 Q2320.24 29.414 2318.41 32.9788 Q2316.6 36.5204 2316.6 43.65 Q2316.6 50.7565 2318.41 54.3213 Q2320.24 57.8629 2323.85 57.8629 Q2327.48 57.8629 2329.29 54.3213 Q2331.12 50.7565 2331.12 43.65 Q2331.12 36.5204 2329.29 32.9788 Q2327.48 29.414 2323.85 29.414 M2323.85 25.7103 Q2329.66 25.7103 2332.71 30.3168 Q2335.79 34.9001 2335.79 43.65 Q2335.79 52.3768 2332.71 56.9833 Q2329.66 61.5666 2323.85 61.5666 Q2318.04 61.5666 2314.96 56.9833 Q2311.9 52.3768 2311.9 43.65 Q2311.9 34.9001 2314.96 30.3168 Q2318.04 25.7103 2323.85 25.7103 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2354.01 29.414 Q2350.4 29.414 2348.57 32.9788 Q2346.76 36.5204 2346.76 43.65 Q2346.76 50.7565 2348.57 54.3213 Q2350.4 57.8629 2354.01 57.8629 Q2357.64 57.8629 2359.45 54.3213 Q2361.28 50.7565 2361.28 43.65 Q2361.28 36.5204 2359.45 32.9788 Q2357.64 29.414 2354.01 29.414 M2354.01 25.7103 Q2359.82 25.7103 2362.88 30.3168 Q2365.95 34.9001 2365.95 43.65 Q2365.95 52.3768 2362.88 56.9833 Q2359.82 61.5666 2354.01 61.5666 Q2348.2 61.5666 2345.12 56.9833 Q2342.07 52.3768 2342.07 43.65 Q2342.07 34.9001 2345.12 30.3168 Q2348.2 25.7103 2354.01 25.7103 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2232.76,1486.45 2232.76,1486.45 2256.76,1486.45 2232.76,1486.45 2232.76,1306.55 2256.76,1306.55 2232.76,1306.55 2232.76,1126.65 2256.76,1126.65 2232.76,1126.65 2232.76,946.746 2256.76,946.746 2232.76,946.746 2232.76,766.846 2256.76,766.846 2232.76,766.846 2232.76,586.946 2256.76,586.946 2232.76,586.946 2232.76,407.045 2256.76,407.045 2232.76,407.045 2232.76,227.145 2256.76,227.145 2232.76,227.145 2232.76,47.2441 2256.76,47.2441 2232.76,47.2441 \"/>\n</svg>\n","category":"page"},{"location":"examples/ising2d/","page":"Classical Ising model","title":"Classical Ising model","text":"","category":"page"},{"location":"examples/ising2d/","page":"Classical Ising model","title":"Classical Ising model","text":"This page was generated using Literate.jl.","category":"page"}]
}
